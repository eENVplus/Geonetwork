(function(){window.mapfish={singleFile:true};var b=true;var a=document.getElementsByTagName("script");for(var c=0;c<a.length;c++){var d=a[c].getAttribute("src");if(d&&d.lastIndexOf("OpenLayers.js")>-1){b=false;break}}if(b){window.OpenLayers._getScriptLocation=function(){return mapfish._getScriptLocation()+"../openlayers/"}}})();(function(){var a=(typeof window.mapfish=="object"&&window.mapfish.singleFile);window.mapfish={_scriptName:"MapFish.js",_getScriptLocation:function(){if(window.gMfLocation){return window.gMfLocation}var m="";var n=mapfish._scriptName;var h=document.getElementsByTagName("script");for(var l=0;l<h.length;l++){var o=h[l].getAttribute("src");if(o){var k=o.lastIndexOf(n);if((k>-1)&&(k+n.length==o.length)){m=o.slice(0,-n.length);break}}}return m}};if(!a){var g=new Array("lang/en.js","core/Color.js","core/GeoStat.js","core/GeoStat/Choropleth.js","core/GeoStat/ProportionalSymbol.js","core/Routing.js","core/Util.js","core/Searcher.js","core/Searcher/Map.js","core/Searcher/Form.js","core/PrintProtocol.js","core/Offline.js","core/Protocol.js","core/Protocol/MapFish.js","core/Protocol/MergeFilterDecorator.js","core/Protocol/TriggerEventDecorator.js","core/Strategy.js","core/Strategy/ProtocolListener.js","widgets/MapComponent.js","widgets/Shortcuts.js","widgets/ComboBoxFactory.js","widgets/recenter/Base.js","widgets/recenter/Coords.js","widgets/data/FeatureReader.js","widgets/data/FeatureStore.js","widgets/data/FeatureStoreMediator.js","widgets/data/SearchStoreMediator.js","widgets/data/LayerStoreMediator.js","widgets/data/GridRowFeatureMediator.js","widgets/geostat/Choropleth.js","widgets/geostat/ProportionalSymbol.js","widgets/tree/LayerTree.js","widgets/tree/LayerTreeExtra.js","widgets/toolbar/Toolbar.js","widgets/toolbar/CheckItem.js","widgets/toolbar/MenuItem.js","widgets/editing/FeatureList.js","widgets/editing/FeatureProperties.js","widgets/editing/FeatureEditingPanel.js","widgets/print/Base.js","widgets/print/BaseWidget.js","widgets/print/SimpleForm.js","widgets/print/MultiPage.js","widgets/print/PrintAction.js");var j="";var f=mapfish._getScriptLocation();for(var b=0;b<g.length;b++){if(/MSIE/.test(navigator.userAgent)||/Safari/.test(navigator.userAgent)){var e="<script src='"+f+g[b]+"'><\/script>";j+=e}else{var d=document.createElement("script");d.src=f+g[b];var c=document.getElementsByTagName("head").length?document.getElementsByTagName("head")[0]:document.body;c.appendChild(d)}}if(j){document.write(j)}}})();mapfish.Util={};mapfish.Util.sum=function(c){for(var a=0,b=0;a<c.length;b+=c[a++]){}return b};mapfish.Util.max=function(a){return Math.max.apply({},a)};mapfish.Util.min=function(a){return Math.min.apply({},a)};mapfish.Util.getIconUrl=function(b,a){if(!a.layer){OpenLayers.Console.warn("Missing required layer option in mapfish.Util.getIconUrl");return""}if(!a.rule){a.rule=a.layer}if(b.indexOf("?")<0){b+="?"}else{if(b.lastIndexOf("&")!=(b.length-1)){if(b.indexOf("?")!=(b.length-1)){b+="&"}}}var a=OpenLayers.Util.extend({layer:"",rule:"",service:"WMS",version:"1.1.1",request:"GetLegendGraphic",format:"image/png",width:16,height:16},a);a=OpenLayers.Util.upperCaseObject(a);return b+OpenLayers.Util.getParameterString(a)};mapfish.Util.arrayEqual=function(d,c){if(d==null||c==null){return false}if(typeof(d)!="object"||typeof(c)!="object"){return false}if(d.length!=c.length){return false}for(var e=0;e<d.length;e++){if(typeof(d[e])!=typeof(c[e])){return false}if(d[e]!=c[e]){return false}}return true};mapfish.Util.isIE7=function(){var a=navigator.userAgent.toLowerCase();return a.indexOf("msie 7")>-1};mapfish.Util.relativeToAbsoluteURL=function(b){if(/^\w+:/.test(b)||!b){return b}var a=location.protocol+"//"+location.host;if(b.indexOf("/")==0){return a+b}var c=location.pathname.replace(/\/[^\/]*$/,"");return a+c+"/"+b};mapfish.Util.fixArray=function(a){if(a==""||a==null){return[]}else{if(a instanceof Array){return a}else{return a.split(",")}}};mapfish.Util.formatURL=function(a){var d=mapfish.PROXY_HOST;if(d&&(a.indexOf("http")==0)){var e=a;var g=e.match(/https?:\/\//)[0].split(":")[0];e=e.slice((g+"://").length);var j=undefined;var c=e.indexOf("/");if(c!=-1){j=e.substring(c);e=e.slice(0,c)}var f=e.split(":");var h=f[0];var b=f.length>1?f[1]:undefined;a=g+","+h;a+=(b==undefined?"":","+b);a+=(j==undefined?"":j);if(d.lastIndexOf("/")!=d.length-1){a="/"+a}a=d+a}return a};mapfish.Color=OpenLayers.Class({getColorRgb:function(){}});mapfish.ColorRgb=OpenLayers.Class(mapfish.Color,{redLevel:null,greenLevel:null,blueLevel:null,initialize:function(c,b,a){this.redLevel=c;this.greenLevel=b;this.blueLevel=a},equals:function(a){return a.redLevel==this.redLevel&&a.greenLevel==this.greenLevel&&a.blueLevel==this.blueLevel},getColorRgb:function(){return this},getRgbArray:function(){return[this.redLevel,this.greenLevel,this.blueLevel]},hex2rgbArray:function(a){if(a.charAt(0)=="#"){a=a.substr(1)}var b=[parseInt(a.substring(0,2),16),parseInt(a.substring(2,4),16),parseInt(a.substring(4,6),16)];for(var c=0;c<b.length;c++){if(b[c]<0||b[c]>255){OpenLayers.Console.error("Invalid rgb hex color string: rgbHexString")}}return b},setFromHex:function(a){var b=this.hex2rgbArray(a);this.redLevel=b[0];this.greenLevel=b[1];this.blueLevel=b[2]},setFromRgb:function(b){var a=dojo.colorFromString(b);this.redLevel=a.r;this.greenLevel=a.g;this.blueLevel=a.b},toHexString:function(){var d=this.toHex(this.redLevel);var c=this.toHex(this.greenLevel);var a=this.toHex(this.blueLevel);return"#"+d+c+a},toHex:function(e){var b="0123456789ABCDEF";if(e<0||e>255){var d="Invalid decimal value for color level";OpenLayers.Console.error(d)}var c=Math.floor(e/16);var a=e%16;return b.charAt(c)+b.charAt(a)},CLASS_NAME:"mapfish.ColorRgb"});mapfish.ColorRgb.getColorsArrayByRgbInterpolation=function(j,d,f){var k=[];var b=j.getColorRgb();var a=d.getColorRgb();var h=b.getRgbArray();var g=a.getRgbArray();if(f==1){return[b]}for(var e=0;e<f;e++){var c=[];c[0]=h[0]+e*(g[0]-h[0])/(f-1);c[1]=h[1]+e*(g[1]-h[1])/(f-1);c[2]=h[2]+e*(g[2]-h[2])/(f-1);k[e]=new mapfish.ColorRgb(parseInt(c[0]),parseInt(c[1]),parseInt(c[2]))}return k};mapfish.Protocol={decorateProtocol:function(a){var c=a.protocol;for(var b in a){if(b!="protocol"){if(!mapfish.Protocol[b]){OpenLayers.Console.error("mapfish.Protocol."+b+" does not exist")}else{c=new mapfish.Protocol[b](OpenLayers.Util.extend({protocol:c},a[b]))}}}return c}};mapfish.Searcher=OpenLayers.Class({initialize:function(){},getFilter:function(){},CLASS_NAME:"mapfish.Searcher"});Ext.namespace("mapfish.widgets");mapfish.widgets.createScaleComboBox=function(c,e){if(!c.scales){OpenLayers.Console.error("scales is missing in the config")}var b=function(g){g=String(Math.round(g));var f=/(\d+)(\d{3})/;while(f.test(g)){g=g.replace(f,"$1'$2")}return"1:"+g};var a=[];for(var d=0;d<c.scales.length;d++){a.push([c.scales[d],b(c.scales[d])])}return new Ext.form.ComboBox(Ext.apply(e,{store:a}))};Ext.namespace("mapfish.widgets");mapfish.widgets.MapComponent=function(a){Ext.apply(this,a);this.contentEl=this.map.div;var b=Ext.get(this.contentEl);b.setStyle("width","100%");b.setStyle("height","100%");mapfish.widgets.MapComponent.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.MapComponent,Ext.Panel,{map:null,initComponent:function(){mapfish.widgets.MapComponent.superclass.initComponent.apply(this,arguments);this.on("bodyresize",this.map.updateSize,this.map)}});Ext.reg("mapcomponent",mapfish.widgets.MapComponent);Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.FeatureReader=function(a,b){a=a||{};mapfish.widgets.data.FeatureReader.superclass.constructor.call(this,a,b||a.fields)};Ext.extend(mapfish.widgets.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(a){return this.readRecords(a.features)},readRecords:function(a){var b=[];if(a){var d=this.recordType,h=d.prototype.fields;var g,e,f,c,n,m,k,l;for(g=0,e=a.length;g<e;g++){n=a[g];m={};if(n.attributes){for(f=0,c=h.length;f<c;f++){k=h.items[f];l=n.attributes[k.mapping||k.name]||k.defaultValue;l=k.convert(l);m[k.name]=l}}m.feature=n;m.state=n.state;m.fid=n.fid;b[b.length]=new d(m,n.id)}}return{records:b,totalRecords:this.totalRecords!=null?this.totalRecords:b.length}}});Ext.namespace("mapfish.widgets","mapfish.widgets.editing");mapfish.widgets.editing.BaseProperty=function(a){Ext.apply(this,a)};mapfish.widgets.editing.BaseProperty.prototype={label:null,name:null,type:null,showInGrid:false,defaultValue:null,extFieldCfg:null,getRecordType:function(){return{name:this.name,type:this.type}},getExtField:function(){OpenLayers.Console.error("Not implemented")}};mapfish.widgets.editing.SimpleProperty=function(a){mapfish.widgets.editing.SimpleProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.SimpleProperty,mapfish.widgets.editing.BaseProperty,{getExtField:function(){return OpenLayers.Util.applyDefaults({xtype:"textfield",fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg)}});mapfish.widgets.editing.StringProperty=function(a){this.type="string";this.defaultValue="";mapfish.widgets.editing.StringProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.StringProperty,mapfish.widgets.editing.SimpleProperty);mapfish.widgets.editing.IntegerProperty=function(a){this.type="int";this.defaultValue=0;mapfish.widgets.editing.IntegerProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.IntegerProperty,mapfish.widgets.editing.SimpleProperty,{getExtField:function(){return OpenLayers.Util.applyDefaults({xtype:"numberfield",allowDecimals:false,fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg)}});mapfish.widgets.editing.FloatProperty=function(a){this.type="float";this.defaultValue=0;mapfish.widgets.editing.FloatProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.FloatProperty,mapfish.widgets.editing.SimpleProperty,{getExtField:function(){return OpenLayers.Util.applyDefaults({xtype:"numberfield",fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg)}});mapfish.widgets.editing.BooleanProperty=function(a){this.type="boolean";this.defaultValue=false;mapfish.widgets.editing.FloatProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.BooleanProperty,mapfish.widgets.editing.BaseProperty,{getExtField:function(){return new Ext.form.Checkbox(OpenLayers.Util.applyDefaults({name:this.name,fieldLabel:this.label||this.name},this.extFieldCfg))}});mapfish.widgets.editing.ComboProperty=function(a){this.type="int";mapfish.widgets.editing.ComboProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.ComboProperty,mapfish.widgets.editing.BaseProperty,{url:null,getExtField:function(){var b=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:this.url,method:"GET",disableCaching:false}),reader:new Ext.data.JsonReader({root:"root"},[{name:"id",type:"int"},"label"])});var a=OpenLayers.Util.applyDefaults({fieldLabel:this.label||this.name,typeAhead:true,triggerAction:"all",editable:false,displayField:"label",valueField:"id",name:this.name,store:b,listeners:{render:{fn:function(c){var d={};d[this.queryParam]="";this.store.load({params:d})}}}},this.extFieldCfg);return new Ext.form.ComboBox(a)}});mapfish.widgets.editing.DateProperty=function(a){this.type="string";mapfish.widgets.editing.DateProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.DateProperty,mapfish.widgets.editing.BaseProperty,{getExtField:function(){return new Ext.form.DateField(OpenLayers.Util.applyDefaults({fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg))}});Ext.namespace("mapfish.widgets.toolbar");mapfish.widgets.toolbar.CheckItem=function(a){Ext.apply(this,a);mapfish.widgets.toolbar.CheckItem.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.toolbar.CheckItem,Ext.menu.CheckItem,{controlAdded:false,olHandler:null,initComponent:function(){mapfish.widgets.toolbar.CheckItem.superclass.initComponent.call(this);Ext.QuickTips.init();if(this.control){this.scope=this;this.checkHandler=this.handleChecked}},handleChecked:function(item,checked){if(!this.controlAdded){this.map.addControl(this.control);this.controlAdded=true}if(checked){if(!this.olHandler){if(this.control.div){this.control.div.style.display="block"}}else{this.control.deactivate();eval("this.control."+this.olHandler+".activate();")}}else{if(!this.olHandler){if(this.control.div){this.control.div.style.display="none"}}else{this.control.deactivate()}}this.saveState()},getState:function(){return{className:this.control.CLASS_NAME,olHandler:this.olHandler,active:this.checked}},applyState:function(a){if(!a){return false}if(this.control.CLASS_NAME==a.className&&this.olHandler==a.olHandler){this.checked=a.active}else{if(this.control.CLASS_NAME==a.className){this.checked=a.active}}this.handleChecked(null,this.checked)},onRender:function(b,a){mapfish.widgets.toolbar.CheckItem.superclass.onRender.apply(this,arguments);if(this.tooltip){this.el.dom.qtip=this.tooltip}}});Ext.reg("checkitem",mapfish.widgets.toolbar.CheckItem);Ext.namespace("mapfish.widgets.toolbar");mapfish.widgets.toolbar.MenuItem=function(a){Ext.apply(this,a);mapfish.widgets.toolbar.MenuItem.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.toolbar.MenuItem,Ext.menu.Item,{initComponent:function(){mapfish.widgets.toolbar.MenuItem.superclass.initComponent.call(this);Ext.QuickTips.init();if(this.control){this.scope=this;this.handler=function(){this.control.trigger()}}},onRender:function(b,a){mapfish.widgets.toolbar.MenuItem.superclass.onRender.apply(this,arguments);if(this.tooltip){this.el.dom.qtip=this.tooltip}}});Ext.reg("menuitem",mapfish.widgets.toolbar.MenuItem);Ext.namespace("mapfish.widgets.toolbar");mapfish.widgets.toolbar.Toolbar=function(a){Ext.apply(this,a);mapfish.widgets.toolbar.Toolbar.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.toolbar.Toolbar,Ext.Toolbar,{controls:null,state:null,configurable:false,_buttons:null,initComponent:function(){mapfish.widgets.toolbar.Toolbar.superclass.initComponent.call(this);this.controls=[];this._buttons=[];this.autoWidth=true;this.autoHeight=true;Ext.QuickTips.init()},addControl:function(c,a){c.visible=true;this.controls.push(c);if(!c.map){this.map.addControl(c)}var b=new Ext.Toolbar.Button(a);if(!b.tooltip){b.tooltip=c.title}b.enableToggle=(c.type!=OpenLayers.Control.TYPE_BUTTON);if(c.isDefault){b.pressed=true}if(c.type==OpenLayers.Control.TYPE_BUTTON){b.on("click",c.trigger,c)}else{b.on("toggle",function(d,e){this.toggleHandler(c,e)},this);c.events.on({activate:this.onControlActivate,deactivate:this.onControlDeactivate,scope:this})}this.add(b);this._buttons.push(b);return b},removeControl:function(b){var a=this.getButtonForControl(b);a.destroy();OpenLayers.Util.removeItem(this._buttons,a);b.events.un({activate:this.onControlActivate,deactivate:this.onControlDeactivate,scope:this});this.map.removeControl(b);OpenLayers.Util.removeItem(this.controls,b)},onControlActivate:function(a){var c=a.object;var b=this.getButtonForControl(c);b.toggle(true)},onControlDeactivate:function(a){var c=a.object;var b=this.getButtonForControl(c);b.toggle(false);this.checkDefaultControl(b)},getControlByClassName:function(b){if(this.controls){for(var a=0;a<this.controls.length;a++){if(this.controls[a].CLASS_NAME==b){return this.controls[a]}}}return null},getButtonForControl:function(b){if(this.controls){for(var a=0;a<this.controls.length;a++){if(this.controls[a]==b){return this._buttons[a]}}}return null},activate:function(){if(this.configurable){this.applyState(this.state);var d=new Ext.Toolbar.Button({text:"+"});d.menu=new Ext.menu.Menu();for(var b=0;b<this.controls.length;b++){d.menu.add({style:"height:25px",text:'<div style="position: relative; left: 25px; top: -15px;" class="'+this._buttons[b].iconCls+'"/>',checked:this.controls[b].visible,scope:{toolbar:this,button:this._buttons[b],control:this.controls[b]},checkHandler:function(f,c){if(c){this.control.visible=true;if(this.control.isDefault){this.control.activate()}this.button.show()}else{this.control.visible=false;this.control.deactivate();this.button.hide()}this.toolbar.saveState()}})}this.add(d)}else{for(var a=0,e;a<this.controls.length;a++){e=this.controls[a];if(e.isDefault){e.activate()}}}},deactivate:function(){for(var a=0;a<this.controls.length;a++){this.controls[a].deactivate()}},applyState:function(f){if(!f){return false}this.state=f;var e=f.controls;if(e){for(var b=0,a=e.length;b<a;b++){var d=e[b];var g=this.getControlByClassName(d.id);if(g){g.visible=d.visible;if(!g.visible){this._buttons[b].hide()}}}}},getState:function(){var b={controls:[]};for(var a=0,d;a<this.controls.length;a++){d=this.controls[a];b.controls[a]={id:d.CLASS_NAME,visible:d.visible}}return b},toggleHandler:function(b,a){if(a!=b.active){if(a){b.activate()}else{b.deactivate()}}},checkDefaultControl:function(c){var f=c.toggleGroup;if(f){var d=null;for(var b=0;b<this.controls.length;b++){var a=this._buttons[b];if(a.toggleGroup==f){var e=this.controls[b];if(e.active){return}else{if(e.isDefault){d=e}}}}if(d){d.activate()}}}});Ext.reg("toolbar",mapfish.widgets.toolbar.Toolbar);mapfish.Searcher.Form=OpenLayers.Class(mapfish.Searcher,{protocol:null,form:null,response:null,initialize:function(a){mapfish.Searcher.prototype.initialize.call(this,a);OpenLayers.Util.extend(this,a);if(!this.form){OpenLayers.Console.error("no form set");return}if(!this.protocol){OpenLayers.Console.error("no protocol set");return}},triggerSearch:function(){this.protocol.abort(this.response);this.response=this.protocol.read({filter:this.getFilter(),searcher:this})},getFilter:function(){var g;var e={};var a=this.form;var m=a.getElementsByTagName("input");for(g=0;g<m.length;g++){k=m.item(g);if(k.disabled==true){continue}var b=k.getAttribute("type");if(b=="radio"||b=="checkbox"){if(k.checked){e=OpenLayers.Util.extend(e,this.getParamsFromInput(k))}}else{if(b=="submit"||b=="button"||b=="image"){}else{e=OpenLayers.Util.extend(e,this.getParamsFromInput(k))}}}var l=a.getElementsByTagName("select");for(g=0;g<l.length;g++){var k=l.item(g);var h=k.getAttribute("name");var n=k.getElementsByTagName("option");for(var f=0;f<n.length;f++){k=n.item(f);if(k.selected){var d=k.getAttribute("value");if(d==null){d=""}var c={};c[h]=d;e=OpenLayers.Util.extend(e,c)}}}return OpenLayers.Util.extend(this.params,e)},getParamsFromInput:function(d){var e;var b=d.getAttribute("type");var c=d.getAttribute("name");if(b=="text"){e=d.value}else{e=d.getAttribute("value")}var a=new Object();if(e!=null){a[c]=e}else{a[c]=null}return a},CLASS_NAME:"mapfish.Searcher.Form"});Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.FeatureStoreMediator=function(a){Ext.apply(this,a);if(!this.store){OpenLayers.Console.error("store is missing in the config")}if(!(this.store.reader instanceof mapfish.widgets.data.FeatureReader)){OpenLayers.Console.error("store does not use a FeatureReader")}};mapfish.widgets.data.FeatureStoreMediator.prototype={store:null,append:true,filter:null,addFeatures:function(f,b){if(!Ext.isArray(f)){f=[f]}b=OpenLayers.Util.applyDefaults(b,{append:this.append,filter:this.filter});var e=f;if(b.filter){e=[];var d;for(var c=0,a=f.length;c<a;c++){d=f[c];if(b.filter(d)){e.push(d)}}}if(!b.append){this.store.removeAll()}this.store.loadData(e,true)},removeFeatures:function(d){if(!d){this.store.removeAll()}else{if(!Ext.isArray(d)){d=[d]}for(var c=0,a=d.length;c<a;c++){var b=d[c];var e=this.store.getById(b.id);if(e!==undefined){this.store.remove(e)}}}}};OpenLayers.Util.extend(OpenLayers.Lang.en,{"mf.tools":"Tools","mf.layertree":"Layer tree","mf.layertree.opacity":"Opacity","mf.layertree.remove":"Remove","mf.layertree.zoomToExtent":"Zoom to extent","mf.print.mapTitle":"Title","mf.print.comment":"Comments","mf.print.loadingConfig":"Loading the configuration...","mf.print.serverDown":"The print service is not working","mf.print.unableToPrint":"Unable to print","mf.print.generatingPDF":"Generating PDF...","mf.print.dpi":"DPI","mf.print.scale":"Scale","mf.print.rotation":"Rotation","mf.print.print":"Print","mf.print.resetPos":"Reset Pos.","mf.print.layout":"Layout","mf.print.addPage":"Add page","mf.print.remove":"Remove page","mf.print.clearAll":"Clear all","mf.print.pdfReady":"Your PDF document is ready.","mf.print.noPage":'No page selected, click on the "Add page" button to add one.',"mf.print.print-tooltip":"Generate a PDF with at least the extent shown on the map","mf.error":"Error","mf.warning":"Warning","mf.information":"Information","mf.cancel":"Cancel","mf.recenter.x":"X","mf.recenter.y":"Y","mf.recenter.submit":"Recenter","mf.recenter.missingCoords":"Some coordinates are missing.","mf.recenter.outOfRangeCoords":"Submitted coordinates (${myX}, ${myY}) are not in the map area<br />and must be within following ranges:<br/>${coordX} between ${minCoordX} and ${maxCoordX},<br />${coordY} between ${minCoordY} and ${maxCoordY}","mf.recenter.ws.error":"An error occured when accessing the distant webservice:","mf.recenter.ws.service":"Selected service","mf.control.previous":"Previous view","mf.control.next":"Next view","mf.control.pan":"Pan","mf.control.zoomIn":"Zoom in","mf.control.zoomOut":"Zoom out","mf.control.zoomAll":"Zoom all","mf.editing.comboNoneName":"None","mf.editing.import":"Import","mf.editing.importTooltip":"Import data","mf.editing.commit":"Commit","mf.editing.commitTooltip":"Commit data","mf.editing.delete":"Delete","mf.editing.deleteTooltip":"Delete selected feature","mf.editing.comboLabel":"Layer to edit","mf.editing.confirmMessageTitle":"Edited features","mf.editing.confirmMessage":"There are uncommitted features, are you sure you want to switch layer?","mf.editing.selectModifyFeature":"Modify features","mf.editing.drawPointTitle":"Draw points","mf.editing.drawLineTitle":"Draw lines","mf.editing.drawPolygonTitle":"Draw polygons","mf.editing.formTitle":"Attributes","mf.editing.gridIdHeader":"Id","mf.editing.gridStateHeader":"State","mf.editing.gridTitle":"Edited features","mf.editing.onContextClickMessage":"Edit this feature","mf.editing.onBeforeUnloadMessage":"The feature editing panel has uncommitted features"});mapfish.PrintProtocol=OpenLayers.Class({config:null,spec:null,params:null,hasOverview:false,initialize:function(c,a,e,b,d){this.config=a;this.spec={pages:[]};e=this.fixOverrides(e,c);this.addMapParams(e,c,b);this.addOverviewMapParams(e,c,b);this.params=d},getAllInOneUrl:function(){var b=new OpenLayers.Format.JSON();var a=this.config.printURL+"?spec="+b.write(this.encodeForURL(this.spec));if(this.params){a+="&"+OpenLayers.Util.getParameterString(this.params)}return a},createPDF:function(g,a,b,d){var c=new OpenLayers.Format.JSON().write(this.spec);OpenLayers.Console.info(c);try{var h="UTF-8";var f=OpenLayers.Util.applyDefaults({url:this.config.createURL},this.params);OpenLayers.Request.POST({url:this.config.createURL,data:c,params:f,headers:{"CONTENT-TYPE":"application/json; charset="+h},callback:function(k){if(k.status>=200&&k.status<300){var j=new OpenLayers.Format.JSON();var l=j.read(k.responseText);if(l&&l.getURL){this.openPdf(l,g,a,d)}else{b.call(d,k)}}else{b.call(d,k)}},scope:this})}catch(e){OpenLayers.Console.warn("Cannot request the print service by AJAX. You must set the 'OpenLayers.ProxyHost' variable. Fallback to GET method");window.open(this.getAllInOneUrl());g.call(d,e)}},openPdf:function(c,d,a,b){OpenLayers.Console.info(c.getURL);if(Ext.isIE||Ext.isOpera){a.call(b,c)}else{window.location=c.getURL;d.call(b)}},fixOverrides:function(g,d){g=OpenLayers.Util.extend({},g);var c=false;var a;for(var b=0;b<d.layers.length;++b){var f=d.layers[b];a=f.name;if(!g[a]){g[a]={}}else{if(g[a].overview){c=true}}}if(c){for(a in g){var e=g[a];if(!e.overview){e.overview=false}}}this.hasOverview=c;return g},addMapParams:function(e,d,b){var a=this.spec;a.dpi=b;a.units=d.baseLayer.units;a.srs=d.baseLayer.projection.getCode();var c=a.layers=[];this.fillLayers(c,d.layers,e,b)},addOverviewMapParams:function(f,e,c){if(!this.hasOverview){var b=e.getControlsByClass("OpenLayers.Control.OverviewMap");if(b.length>0){var a=this.spec;var d=a.overviewLayers=[];this.fillLayers(d,b[0].layers,f,c)}}},fillLayers:function(c,a,j,b){for(var d=0;d<a.length;++d){var g=a[d];var e=OpenLayers.Util.extend({},j[g.name]);OpenLayers.Util.extend(e,e[b]);if((g.getVisibility()&&e.visibility!==false)||e.visibility===true){var h=g.CLASS_NAME;var k=mapfish.PrintProtocol.SUPPORTED_TYPES[h];if(k){var f=k.call(this,g);if(f){this.applyOverrides(f,e);if(g.isBaseLayer){c.unshift(f)}else{c.push(f)}}}else{if(!k){OpenLayers.Console.error("Don't know how to print a layer of type "+h+" ("+g.name+")")}}}}},applyOverrides:function(b,d){for(var a in d){if(isNaN(parseInt(a))){var c=d[a];if(a=="layers"||a=="styles"){c=mapfish.Util.fixArray(c)}if(a=="visibility"){}else{if(b[a]!=null||a=="overview"){b[a]=c}else{b.customParams[a]=c}}}}},convertLayer:function(b){var a=b.url;if(a instanceof Array){a=a[0]}return{baseURL:mapfish.Util.relativeToAbsoluteURL(a),opacity:(b.opacity!=null)?b.opacity:1,singleTile:b.singleTile,customParams:{}}},convertWMSLayer:function(c){var a=OpenLayers.Util.extend(this.convertLayer(c),{type:"WMS",layers:mapfish.Util.fixArray(c.params.LAYERS),format:c.params.FORMAT||c.DEFAULT_PARAMS.format,styles:mapfish.Util.fixArray(c.params.STYLES||c.DEFAULT_PARAMS.styles)});for(var b in c.params){var d=b.toLowerCase();if(c.DEFAULT_PARAMS[d]==null&&d!="layers"&&d!="width"&&d!="height"&&d!="srs"){a.customParams[b]=c.params[b]}}return a},convertMapServerLayer:function(c){var a=OpenLayers.Util.extend(this.convertLayer(c),{type:"MapServer",layers:mapfish.Util.fixArray(c.params.LAYERS||c.params.layers),format:c.params.FORMAT||c.params.format||c.DEFAULT_PARAMS.format});for(var b in c.params){var d=b.toLowerCase();if(c.DEFAULT_PARAMS[d]==null&&d!="layers"&&d!="format"&&d!="width"&&d!="height"&&d!="srs"){a.customParams[b]=c.params[b]}}return a},convertTileCacheLayer:function(a){return OpenLayers.Util.extend(this.convertLayer(a),{type:"TileCache",layer:a.layername,maxExtent:a.maxExtent.toArray(),tileSize:[a.tileSize.w,a.tileSize.h],extension:a.extension,resolutions:a.serverResolutions||a.resolutions})},convertImageLayer:function(b){var a=b.getURL(b.extent);return{type:"Image",baseURL:mapfish.Util.relativeToAbsoluteURL(a),opacity:(b.opacity!=null)?b.opacity:1,extent:b.extent.toArray(),pixelSize:[b.size.w,b.size.h],name:b.name}},convertVectorLayer:function(j){var e=j.features;var c=[];var o={};var l=new OpenLayers.Format.GeoJSON();var b=1;for(var h=0;h<e.length;++h){var p=e[h];var a=p.style||j.style||j.styleMap.createSymbolizer(p,p.renderIntent);var d;if(a._printId){d=a._printId}else{a._printId=d=b++;o[d]=a;if(a.externalGraphic){a.externalGraphic=mapfish.Util.relativeToAbsoluteURL(a.externalGraphic)}}var f=l.extract.feature.call(l,p);f.properties=OpenLayers.Util.extend({_style:d},f.properties);for(var n in f.properties){var k=f.properties[n];if(k instanceof Object&&!(k instanceof String)){delete f.properties[n]}}c.push(f)}for(var m in o){delete o[m]._printId}var g={type:"FeatureCollection",features:c};return OpenLayers.Util.extend(this.convertLayer(j),{type:"Vector",styles:o,styleProperty:"_style",geoJson:g,name:j.name,opacity:(j.opacity!=null)?j.opacity:1})},encodeForURL:function(g){if(g==null){return null}var c=typeof g;Ext.type(g);if(c=="string"){return escape(g.replace(/[\n]/g,"\\n"))}else{if(c=="object"&&g.constructor==Array){var h=[];for(var b=0;b<g.length;++b){var f=this.encodeForURL(g[b]);if(f!=null){h.push(f)}}return h}else{if(c=="object"&&g.CLASS_NAME&&g.CLASS_NAME=="OpenLayers.Feature.Vector"){return new OpenLayers.Format.WKT().write(g)}else{if(c=="object"){var e={};for(var a in g){var d=this.encodeForURL(g[a]);if(d!=null){e[a]=d}}return e}else{return g}}}}},CLASS_NAME:"mapfish.PrintProtocol"});mapfish.PrintProtocol.getConfiguration=function(b,f,a,c,e){try{e=OpenLayers.Util.extend(e,{url:b});OpenLayers.Request.GET({url:b,params:e,callback:function(h){if(h.status>=200&&h.status<300){var g=new OpenLayers.Format.JSON();var j=g.read(h.responseText);if(j){f.call(c,j)}else{a.call(c,h)}}else{a.call(c,h)}}})}catch(d){a.call(c,d)}};mapfish.PrintProtocol.IGNORED=function(){return null};mapfish.PrintProtocol.SUPPORTED_TYPES={"OpenLayers.Layer":mapfish.PrintProtocol.IGNORED,"OpenLayers.Layer.WMS":mapfish.PrintProtocol.prototype.convertWMSLayer,"OpenLayers.Layer.WMS.Untiled":mapfish.PrintProtocol.prototype.convertWMSLayer,"OpenLayers.Layer.TileCache":mapfish.PrintProtocol.prototype.convertTileCacheLayer,"OpenLayers.Layer.Vector":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.Vector.RootContainer":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.GML":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.PointTrack":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.MapServer":mapfish.PrintProtocol.prototype.convertMapServerLayer,"OpenLayers.Layer.MapServer.Untiled":mapfish.PrintProtocol.prototype.convertMapServerLayer,"OpenLayers.Layer.Image":mapfish.PrintProtocol.prototype.convertImageLayer};Ext.namespace("mapfish.widgets");mapfish.widgets.Shortcuts=function(a){Ext.apply(this,a);mapfish.widgets.Shortcuts.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.Shortcuts,Ext.Container,{combo:null,initComponent:function(){this.combo=new Ext.form.ComboBox({name:"shortcuts",hiddenName:"",store:this.store,valueField:"value",displayField:"text",editable:false,mode:"local",triggerAction:"all",emptyText:"Select a value ...",lazyRender:true,width:150});this.combo.on("select",this.recenter,this);mapfish.widgets.Shortcuts.superclass.initComponent.call(this)},onRender:function(b,a){this.add(this.combo);if(!this.el){this.el=document.createElement("div")}mapfish.widgets.Shortcuts.superclass.onRender.apply(this,arguments);this.initTemplates();this.applyTemplates()},initTemplates:function(){var a=this.templates||{};if(!a.header){a.header=new Ext.Template("some text before")}if(!a.footer){a.footer=new Ext.Template("some text after")}this.templates=a},applyTemplates:function(){for(var a in this.templates){var c=this.templates[a];var b=document.createElement("div");c.overwrite(b);switch(a){case"header":c.insertBefore(this.el);break;case"footer":c.insertAfter(this.el);break}}},recenter:function(b,a){this.map.zoomToExtent(a.get("bbox"))}});Ext.reg("shortcuts",mapfish.widgets.Shortcuts);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");mapfish.widgets.print.Base={map:null,overrides:null,configUrl:null,config:null,layerTree:null,grids:null,serviceParams:null,mask:null,printing:false,initPrint:function(){if(this.overrides==null){this.overrides={}}if(this.config==null){mapfish.PrintProtocol.getConfiguration(this.configUrl,this.configReceived,this.configFailed,this,this.serviceParams);return true}else{this.fillComponent();return false}},configReceived:function(a){this.config=a;if(this.mask){this.mask.hide()}},configFailed:function(){if(this.mask){this.mask.hide()}},print:function(){if(this.mask){this.mask.msg=OpenLayers.Lang.translate("mf.print.generatingPDF");this.mask.show()}var a=new mapfish.PrintProtocol(this.map,this.config,this.overrides,this.getCurDpi(),this.serviceParams);if(this.layerTree){this.addLegends(a.spec)}if(this.grids){this.addGrids(a.spec)}this.fillSpec(a);this.printing=true;a.createPDF(function(){if(this.mask){this.mask.hide()}this.printing=false},function(d){var e="Ext.getCmp('printPopup').destroy();";if(Ext.isOpera){e+="window.open('"+d.getURL+"', '_blank');"}else{e+="window.location='"+d.getURL+"';"}var c=OpenLayers.Lang.translate("mf.print.pdfReady")+'<br /><br /><table onclick="'+e+'" border="0" cellpadding="0" cellspacing="0" class="x-btn-wrap" align="center"><tbody><tr><td class="x-btn-left"><i>&#160;</i></td><td class="x-btn-center"><em unselectable="on" class="x-btn x-btn-text">'+Ext.MessageBox.buttonText.ok+'</em></td><td class="x-btn-right"><i>&#160;</i></td></tr></tbody></table>';var b=new Ext.Window({bodyStyle:"padding: 7px;",width:200,id:"printPopup",autoHeight:true,constrain:true,closable:false,title:OpenLayers.Lang.translate("mf.information"),html:c,listeners:{destroy:function(){if(this.mask){this.mask.hide()}this.printing=false},scope:this}});b.show()},function(b){Ext.Msg.alert(OpenLayers.Lang.translate("mf.error"),OpenLayers.Lang.translate("mf.print.unableToPrint"));if(this.mask){this.mask.hide()}this.printing=false},this)},addGrids:function(k){var d=this.grids;if(d&&typeof d=="function"){d=d()}if(d){for(var b in d){var a=d[b];if(!a){continue}k[b]={};var f=k[b].data=[];var g=k[b].columns=[];var c=a.getColumnModel();var h=a.getStore();for(var e=0;e<c.getColumnCount();++e){if(!c.isHidden(e)){g.push(c.getDataIndex(e))}}h.each(function(j){var m={};for(var l in j.data){var n=j.data[l];if(n!=null){if(n.CLASS_NAME&&n.CLASS_NAME=="OpenLayers.Feature.Vector"){n=new OpenLayers.Format.WKT().write(n)}m[l]=n}}f.push(m)},this)}}},addLegends:function(c){var a=c.legends=[];function d(e){var g={name:e.attributes.printText||e.attributes.text,icon:mapfish.Util.relativeToAbsoluteURL(e.attributes.icon)};var f=g.classes=[];e.eachChild(function(h){f.push({name:h.attributes.printText||h.attributes.text,icon:mapfish.Util.relativeToAbsoluteURL(h.attributes.icon)})},this);a.push(g)}function b(e){e.eachChild(function(g){var f=g.attributes;if(f.checked&&f.layerNames&&!f.hidden&&f.printText!==""){d(g)}else{b(g)}},this)}b(this.layerTree.getRootNode());if(a.length==0){delete c.legends}},fillSpec:null,getCurDpi:null};Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");mapfish.widgets.print.PrintAction=function(a){var b=OpenLayers.Util.extend({iconCls:"mf-print-action",text:OpenLayers.Lang.translate("mf.print.print"),tooltip:OpenLayers.Lang.translate("mf.print.print-tooltip"),handler:this.handler,scope:this},a);mapfish.widgets.print.PrintAction.superclass.constructor.call(this,b);OpenLayers.Util.extend(this,a);this.mask=new Ext.LoadMask(this.map.div,{msg:OpenLayers.Lang.translate("mf.print.loadingConfig")});this.initPrint()};Ext.extend(mapfish.widgets.print.PrintAction,Ext.Action,{handler:function(){if(!this.printing&&this.config){this.print()}},fillSpec:function(a){var b={bbox:this.map.getExtent().toArray()};var c=a.spec;c.pages.push(b);c.layout=this.getCurLayout()},getCurDpi:function(){return this.config.dpis[0].value},getCurLayout:function(){return this.config.layouts[0].name}});OpenLayers.Util.applyDefaults(mapfish.widgets.print.PrintAction.prototype,mapfish.widgets.print.Base);Ext.reg("print-action",mapfish.widgets.print.PrintAction);mapfish.Searcher.Map=OpenLayers.Class(mapfish.Searcher,OpenLayers.Control,{protocol:null,mode:null,searchTolerance:3,searchToleranceUnits:"pixels",pointAsBBOX:false,pixelTolerance:2,delay:300,boxDivClassName:"olHandlerBoxZoomBox",displayDefaultPopup:false,onMouseMove:function(a){},position:null,popupLonLat:null,response:null,projection:null,initialize:function(a){this.mode=mapfish.Searcher.Map.CLICK;mapfish.Searcher.prototype.initialize.call(this,a);OpenLayers.Control.prototype.initialize.call(this,a);if(!this.protocol){OpenLayers.Console.error("no protocol set");return}switch(this.mode){case mapfish.Searcher.Map.CLICK:this.handler=new OpenLayers.Handler.Click(this,{click:this.handlePoint},{delay:this.delay,pixelTolerance:this.pixelTolerance});break;case mapfish.Searcher.Map.HOVER:this.handler=new OpenLayers.Handler.Hover(this,{pause:this.handlePoint,move:this.cancelSearch},{delay:this.delay,pixelTolerance:this.pixelTolerance});break;case mapfish.Searcher.Map.BOX:this.handler=new OpenLayers.Handler.Box(this,{done:this.handleBox},{boxDivClassName:this.boxDivClassName});break;case mapfish.Searcher.Map.EXTENT:break;default:OpenLayers.Console.error("unsupported mode");return}},activate:function(){var a=OpenLayers.Control.prototype.activate.call(this);if(a){if(this.mode==mapfish.Searcher.Map.EXTENT){this.map.events.register("moveend",this,this.handleMoveend)}else{if(this.displayDefaultPopup&&this.protocol.CLASS_NAME=="mapfish.Protocol.TriggerEventDecorator"){this.protocol.events.on({crudfinished:this.displayPopup,scope:this})}}}return a},deactivate:function(){var a=OpenLayers.Control.prototype.deactivate.call(this);if(a){if(this.mode==mapfish.Searcher.Map.EXTENT){this.map.events.unregister("moveend",this,this.handleMoveend)}else{if(this.displayDefaultPopup&&this.protocol.CLASS_NAME=="mapfish.Protocol.TriggerEventDecorator"){this.protocol.events.un({crudfinished:this.displayPopup,scope:this})}}}return a},handlePoint:function(a){this.position=a.xy;this.popupLonLat=this.map.getLonLatFromViewPortPx(this.position);this.triggerSearch()},handleBox:function(a){if(a instanceof OpenLayers.Bounds){var c=this.map.getLonLatFromPixel(new OpenLayers.Pixel(a.left,a.bottom));var b=this.map.getLonLatFromPixel(new OpenLayers.Pixel(a.right,a.top));this.position=new OpenLayers.Bounds(c.lon,c.lat,b.lon,b.lat);this.popupLonLat=this.position.getCenterLonLat()}else{this.position=a;this.popupLonLat=this.map.getLonLatFromViewPortPx(this.position)}this.triggerSearch()},handleMoveend:function(){this.position=this.map.getExtent();this.triggerSearch()},triggerSearch:function(){this.cancelSearch();var b=this.getFilter();b=this.isFilter(b)?{filter:b}:{params:b};var a=OpenLayers.Util.extend({searcher:this},b);this.response=this.protocol.read(a)},cancelSearch:function(a){this.protocol.abort(this.response);this.response=null;if(this.mode==mapfish.Searcher.Map.HOVER){this.onMouseMove()}},displayPopup:function(d){var g=d.features;if(g&&g.length>0){var c;var f="<table><tr>";for(c in g[0].attributes){f+="<th>"+c+"</th>"}f+="</tr>";for(var e=0;e<g.length;e++){var b=g[e].attributes;f+="<tr>";for(c in b){f+="<td>"+b[c]+"</td>"}f+="</tr>"}f+="</table>";var a=new OpenLayers.Popup.FramedCloud("mapfish_popup",this.popupLonLat,null,f,null,true);this.map.addPopup(a,true)}},isFilter:function(a){return !!a.CLASS_NAME&&!!a.CLASS_NAME.match(/^OpenLayers\.Filter/)},reproject:function(a){if(this.projection&&!this.projection.equals(this.map.getProjectionObject())){a.transform(this.map.getProjectionObject(),this.projection)}return a},getFilter:function(){var c=null;if(this.mode==mapfish.Searcher.Map.EXTENT&&!this.position){this.position=this.map.getExtent()}if(this.position){if(this.position instanceof OpenLayers.Bounds){c=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.reproject(this.position)})}else{var b=this.searchTolerance;if(b&&this.searchToleranceUnits=="pixels"){b*=this.map.getResolution()}var e=this.map.getLonLatFromViewPortPx(this.position);var a=this.reproject(new OpenLayers.Geometry.Point(e.lon,e.lat));if(b){if(this.pointAsBBOX){var d=new OpenLayers.Bounds(e.lon-b/2,e.lat-b/2,e.lon+b/2,e.lat+b/2);c=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.reproject(d)})}else{c=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.DWITHIN,value:a,distance:b,distanceUnits:this.map.getUnits()})}}else{c=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.WITHIN,value:a})}}this.position=null}return c},CLASS_NAME:"mapfish.Searcher.Map"});mapfish.Searcher.Map.CLICK="CLICK";mapfish.Searcher.Map.HOVER="HOVER";mapfish.Searcher.Map.BOX="BOX";mapfish.Searcher.Map.EXTENT="EXTENT";Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.LayerStoreMediator=function(b){var a=b.store;delete b.store;Ext.apply(this,b);if(!this.layer){OpenLayers.Console.error("layer is missing in config")}this.featureStoreMediator=new mapfish.widgets.data.FeatureStoreMediator({store:a});if(this.autoActivate){this.activate()}};mapfish.widgets.data.LayerStoreMediator.prototype={layer:null,filter:null,autoActivate:true,active:false,featureStoreMediator:null,activate:function(){if(!this.active){this.layer.events.on({featuresadded:this.update,featuresremoved:this.update,featuremodified:this.update,scope:this});this.active=true;return true}return false},deactivate:function(){if(this.active){this.layer.events.un({featuresadded:this.update,featuresremoved:this.update,featuremodified:this.update,scope:this});return true}return false},update:function(){this.featureStoreMediator.addFeatures(this.layer.features,{append:false,filter:this.filter})}};Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.editing");mapfish.widgets.editing.FeatureList=function(a){Ext.apply(this,a,{sm:new Ext.grid.RowSelectionModel({singleSelect:true}),clicksToEdit:1,enableDragDrop:true});mapfish.widgets.editing.FeatureList.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.editing.FeatureList,Ext.grid.EditorGridPanel,{featureType:null,map:null,layer:null,automaticMode:false,autoFocusMode:2,displayNotEdited:true,editGeometryVisual:function(b,a,c){return b?(c?"->":"X"):""},isDnd:false,colDefs:null,modifyFeature:null,initComponent:function(){if(!this.map&&!this.layer){OpenLayers.Console.error("Mandatory param for FeatureList missing: layer and/or map")}if(!this.featureType){OpenLayers.Console.error("Mandatory param for FeatureList missing: featureType")}this.colDefs=this.columns;mapfish.widgets.editing.FeatureList.superclass.initComponent.call(this);this.setGeoColRenderer();if(!this.map){this.map=this.layer.map}else{if(!this.layer){this.layer=new OpenLayers.Layer.Vector("Geometry editing");this.map.addLayer(this.layer)}}var a=this;this.addEvents({geomodifstart:true,geomodif:true,geomodifend:true});var c=OpenLayers.Control.ModifyFeature.RESHAPE|OpenLayers.Control.ModifyFeature.DRAG;this.modifyFeature=new OpenLayers.Control.ModifyFeature(this.layer,{mode:c,onModificationStart:function(e){if(!a.automaticMode){this.activate()}a.refreshGeometryVisual(e.data);var d=e.data;var f=a.getStore().findBy(function(g){return g.id==d.id});a.getView().focusCell(f,0);a.getSelectionModel().selectRange(f,f);a.fireEvent("geomodifstart",a,d,e)},onModification:function(d){a.fireEvent("geomodif",a,d.data,d)},onModificationEnd:function(d){if(!a.automaticMode){this.deactivate()}if(d.data){a.refreshGeometryVisual(d.data)}if(!a.displayNotEdited){a.layer.removeFeatures(d)}a.fireEvent("geomodifend",a,d.data,d)}});this.map.addControl(this.modifyFeature);this.getStore().on("remove",function(e,d,f){this.removeGeometries(d)},this);this.getStore().on("clear",function(d){d.each(this.removeGeometries,this)},this);function b(e,d,f){if(a.displayNotEdited){for(var g=0;g<d.length;++g){a.addGeometries(d[g])}}return true}this.getStore().on("add",b);this.getStore().on("load",function(e,d,f){if(!f.add){if(this.modifyFeature.feature){this.modifyFeature.selectControl.unselect(this.modifyFeature.feature)}this.clearLayer()}b(e,d,0);return true},this)},onRender:function(){mapfish.widgets.editing.FeatureList.superclass.onRender.apply(this,arguments);var b=this;var a=new Ext.dd.DropTarget(this.getView().mainBody,{ddGroup:"GridDD",notifyOver:function(f,g,d){var c=f.getDragData(g).rowIndex;if(typeof c!="undefined"){return this.dropAllowed}return this.dropNotAllowed},notifyDrop:function(c,j,g){var h=c.getDragData(j);var f=h.rowIndex;if(typeof f!="undefined"){var d=g.selections[0];b.isDnd=true;g.grid.store.remove(d);h.grid.store.insert(f,d);b.isDnd=false;return true}return false}});if(this.displayNotEdited){this.drawAllFeatures()}},eachGeoColumn:function(d){for(var c=0;c<this.colDefs.length;++c){var b=this.colDefs[c];var a=this.featureType.prototype.fields.get(b.dataIndex);if(a.type=="geo"){d.call(this,b,a,c)}}},setGeoColRenderer:function(){this.eachGeoColumn(function(c,a,b){c.renderer=OpenLayers.Function.bind(function(h,g,d,j,f,e){if(h){var k=(this.grid.modifyFeature.feature!=null)&&(this.grid.getFeatureByGeometry(h)==this.grid.modifyFeature.feature);return"<div onclick=\"mapfish.widgets.editing.FeatureList.geometryClickHandler('"+this.grid.id+"', "+d.id+", '"+this.colName+"');\">"+this.grid.editGeometryVisual(h,d,k)+"</div>"}else{return this.grid.editGeometryVisual(h,d,false)}},{grid:this,colName:a.name})})},drawAllFeatures:function(){this.clearLayer();if(this.displayNotEdited){var a=[];this.eachGeoColumn(function(d,b,c){this.store.each(function(f){var g=f.get(b.name);if(g&&!this.getFeatureByGeometry(g)){var e=new OpenLayers.Feature.Vector(g,f);a.push(e)}},this)});this.layer.addFeatures(a)}},addGeometries:function(a){var b=this.layer;this.eachGeoColumn(function(f,c,e){var g=a.get(c.name);if(g&&!this.getFeatureByGeometry(g)){var d=new OpenLayers.Feature.Vector(g,a);b.addFeatures(d)}})},removeGeometries:function(a){this.eachGeoColumn(function(d,b,c){var f=a.get(b.name);if(f){var e=this.getFeatureByGeometry(f);if(e){if(e==this.modifyFeature.feature){e.data=null;this.modifyFeature.selectControl.unselect(e)}this.layer.removeFeatures([e]);e.destroy()}}});return true},getFeatureByGeometry:function(d){var b=this.layer.features;for(var a=0;a<b.length;++a){var c=b[a];if(c.geometry==d){return c}}return null},editFirstGeometry:function(b){if(this.automaticMode){return}var e;for(var d=0;d<this.colDefs.length;++d){var c=this.colDefs[d];var a=this.featureType.prototype.fields.get(c.dataIndex);if(a.type=="geo"){e=a.name;break}}this.editGeometry(b,e,false)},editGeometry:function(b,e,a){var f=b.get(e);if(!f){return}var c=this.getFeatureByGeometry(f);if(!c&&!this.displayNotEdited){c=new OpenLayers.Feature.Vector(f,b);this.layer.addFeatures(c)}if(c){var d=this.modifyFeature.feature;if(d){this.modifyFeature.selectControl.unselect(this.modifyFeature.feature)}if(d!=c){this.modifyFeature.selectControl.select(c);if(a){this.manageAutoFocus(f)}}}else{OpenLayers.Console.error("BUG: cannot find vector feature for: "+b)}},manageAutoFocus:function(c){if(this.autoFocusMode==1){this.map.zoomToExtent(c.getBounds())}else{if(this.autoFocusMode==2){var a=this.map.getExtent();a.extend(c.getBounds());var b=a.getWidth()*0.02;a.left+=b;a.right-=b;a.top-=b;a.bottom+=b;this.map.zoomToExtent(a)}}},refreshGeometryVisual:function(a){this.getView().refreshRow(a)},setAutomaticMode:function(a){if(a==this.automaticMode){return}this.automaticMode=a;if(this.modifyFeature.feature){this.modifyFeature.selectControl.unselect(this.modifyFeature.feature)}if(a){this.modifyFeature.activate()}else{this.modifyFeature.deactivate()}},setDisplayNotEdited:function(a){if(a==this.displayNotEdited){return}this.displayNotEdited=a;if(a){this.drawAllFeatures()}else{this.clearLayer();this.setAutomaticMode(false)}},clearLayer:function(){var c=[];var b=this.layer;var e=this.modifyFeature.feature;for(var a=0;a<b.features.length;++a){var d=b.features[a];if(d!=e&&d.data&&d.data.endEdit){c.push(d)}}b.removeFeatures(c)}});Ext.reg("featurelist",mapfish.widgets.editing.FeatureList);mapfish.widgets.editing.FeatureList.geometryClickHandler=function(b,d,e){var c=Ext.getCmp(b);if(c){var a=c.store.getById(d);if(a){c.editGeometry(a,e,true)}else{OpenLayers.Console.error("Cannot find record with id="+d)}}else{OpenLayers.Console.error("Cannot find grid with id="+b)}};mapfish.widgets.editing.FeatureList.createRecord=function(c){for(var b=0;b<c.length;++b){var a=c[b];if(a.type=="geo"){if(!a.convert){a.convert=function(d){return d}}if(!a.sortType){a.sortType=Ext.data.SortTypes.none()}}}return Ext.data.Record.create.apply(null,arguments)};Ext.namespace("mapfish.widgets","mapfish.widgets.recenter");mapfish.widgets.recenter.Base=function(a){Ext.apply(this,a);mapfish.widgets.recenter.Base.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.recenter.Base,Ext.FormPanel,{scales:null,showCenter:null,defaultZoom:null,vectorLayer:null,expandedOnce:false,initComponent:function(){mapfish.widgets.recenter.Base.superclass.initComponent.apply(this,arguments);this.on("destroy",this.destroyResources,this);this.on("collapse",this.destroyResources,this);this.on("deactivate",this.destroyResources,this);this.on("disable",this.destroyResources,this)},render:function(){if(!this.ownerCt||!this.ownerCt.initialConfig.layout||this.ownerCt.initialConfig.layout.toLowerCase!="accordion"){this.addItems()}mapfish.widgets.recenter.Base.superclass.render.apply(this,arguments)},expand:function(){mapfish.widgets.recenter.Base.superclass.expand.apply(this,arguments);if(!this.expandedOnce){this.addItems();this.expandedOnce=true;this.doLayout()}},addItems:function(){OpenLayers.Console.warn("must be implemented by subclasses")},removeAll:function(){if(this.items){this.items.each(this.remove,this);this.form.items.clear()}},addRecenterButton:function(){this.addButton({text:OpenLayers.i18n("mf.recenter.submit"),handler:this.recenter,scope:this})},addScaleCombo:function(){this.add(mapfish.widgets.createScaleComboBox({scales:this.scales},{fieldLabel:OpenLayers.i18n("mf.print.scale"),typeAhead:false,value:this.scales[this.defaultZoom]||this.scales[0],mode:"local",id:"scale_"+this.getId(),name:"scale",hiddenName:"scaleValue",editable:false,triggerAction:"all"}))},recenter:function(){OpenLayers.Console.warn("must be implemented by subclasses")},recenterOnCoords:function(a,c,b){if(typeof(b)=="undefined"){b=(typeof(this.defaultZoom)!="undefined")?this.defaultZoom:this.map.getZoom()}if(this.showCenter){this.showCenterMark(a,c)}this.map.setCenter(new OpenLayers.LonLat(a,c),b)},recenterOnBbox:function(b){if(this.showCenter){var a=b.getCenterLonLat();this.showCenterMark(a.lon,a.lat)}this.map.zoomToExtent(b)},recenterOnGeometry:function(a){if(a.CLASS_NAME=="OpenLayers.Geometry.Point"){this.recenterOnCoords(a.x,a.y)}else{this.recenterOnBbox(a.getBounds())}},showCenterMark:function(a,c){this.prepareVectorLayer();var b=[new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(a,c),{type:this.symbol||"cross"})];this.vectorLayer.addFeatures(b)},prepareVectorLayer:function(){if(this.vectorLayer){this.vectorLayer.destroyFeatures()}else{var a=new OpenLayers.StyleMap({"default":OpenLayers.Util.extend({graphicName:"${type}",pointRadius:10,fillColor:"red",fillOpacity:1},this.centerMarkStyles)});this.vectorLayer=new OpenLayers.Layer.Vector("Center Symbol",{styleMap:a,alwaysInRange:true});this.map.addLayer(this.vectorLayer)}},showError:function(b,a){a=a||OpenLayers.i18n("mf.error");Ext.Msg.alert(a,b)},destroyLayer:function(){var a=this.vectorLayer;if(a){a.destroy();this.vectorLayer=null}},destroyResources:function(){this.destroyLayer()}});Ext.namespace("mapfish.widgets");mapfish.widgets.RadioTreeNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{renderElements:function(e,l,k,m){this.indentMarkup=e.parentNode?e.parentNode.ui.getChildIndent():"";var f=typeof l.checked=="boolean";var g=e.attributes.radioGrp||"radioGrp";var c=l.href?l.href:Ext.isGecko?"":"#";var d=['<li class="x-tree-node"><div ext:tree-node-id="',e.id,'" class="x-tree-node-el x-tree-node-leaf x-unselectable ',l.cls,'" unselectable="on">','<span class="x-tree-node-indent">',this.indentMarkup,"</span>",'<img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow" />','<img src="',l.icon||this.emptyIcon,'" class="x-tree-node-icon',(l.icon?" x-tree-node-inline-icon":""),(l.iconCls?" "+l.iconCls:""),'" unselectable="on" />',f?('<input class="x-tree-node-cb" type="radio" id="'+e.id+'" name="'+g+'" '+(l.checked?'checked="checked" />':"/>")):"",'<a hidefocus="on" class="x-tree-node-anchor" href="',c,'" tabIndex="1" ',l.hrefTarget?' target="'+l.hrefTarget+'"':"",'><span unselectable="on">',e.text,"</span></a></div>",'<ul class="x-tree-node-ct" style="display:none;"></ul>',"</li>"].join("");var b;if(m!==true&&e.nextSibling&&(b=e.nextSibling.ui.getEl())){this.wrap=Ext.DomHelper.insertHtml("beforeBegin",b,d)}else{this.wrap=Ext.DomHelper.insertHtml("beforeEnd",k,d)}this.elNode=this.wrap.childNodes[0];this.ctNode=this.wrap.childNodes[1];var j=this.elNode.childNodes;this.indentNode=j[0];this.ecNode=j[1];this.iconNode=j[2];var h=3;if(f){this.checkbox=j[3];h++}this.anchor=j[h];this.textNode=j[h].firstChild},_unused_renderElements:function(g,c,e,b){mapfish.widgets.RadioTreeNodeUI.superclass.renderElements.apply(this,arguments);var f=Ext.DomQuery.selectNode(".x-tree-node-cb",this.elNode);var d=g.attributes.radioGrp||"radioGrp";f.setAttribute("type","radio");f.setAttribute("id",g.id);f.setAttribute("name",d)},onRadioChange:function(){var a=this.checkbox.checked;this.node.attributes.checked=a;this.fireEvent("radiochange",this.node,a)}});mapfish.widgets.LayerTreeEventModel=Ext.extend(Ext.tree.TreeEventModel,{delegateClick:function(b,a){if(!this.beforeEvent(b)){return}if(b.getTarget("input[type=checkbox]",1)){this.onCheckboxClick(b,this.getNode(b))}else{if(b.getTarget("input[type=radio]",1)){this.onRadioClick(b,this.getNode(b))}else{if(b.getTarget(".x-tree-ec-icon",1)){this.onIconClick(b,this.getNode(b))}else{if(this.getNodeTarget(b)){this.onNodeClick(b,this.getNode(b))}}}}},onRadioClick:function(b,a){if(!a.ui.onRadioChange){OpenLayers.Console.error("Invalid TreeNodeUI Class, no onRadioChange is available");return}a.ui.onRadioChange(b)}});mapfish.widgets.LayerTree=function(a){Ext.apply(this,a);mapfish.widgets.LayerTree.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.LayerTree,Ext.tree.TreePanel,{separator:":",model:null,showWmsLegend:false,rootVisible:false,animate:true,autoScroll:true,loader:new Ext.tree.TreeLoader({}),enableDD:false,containerScroll:true,ascending:true,_automaticModel:true,layerNameToLayer:{},baseLayerNames:[],layersWithSublayers:{},layerToNodeIds:{},nodeIdToNode:{},nodeIdToLayers:{},hasCheckbox:function(a){return typeof(a.attributes.checked)=="boolean"},setNodeChecked:function(a,d,b){var c=(a instanceof Ext.data.Node)?a:this.getNodeById(a);if(!c||!this.hasCheckbox(c)){return}if(d===undefined){d=!c.attributes.checked}c.attributes.checked=d;if(c.ui&&c.ui.checkbox){c.ui.checkbox.checked=d}if(b||(b===undefined)){c.fireEvent("checkchange",c,d)}},_updateCachedObjects:function(){if(!this.map){OpenLayers.Console.error("map Object needs to be available when calling _updateCachedObjects");return}this.layerNameToLayer={};this.baseLayerNames=[];this.layersWithSublayers={};this.layerToNodeIds={};this.nodeIdToNode={};this.nodeIdToLayers={};Ext.each(this.map.layers,function(b){var a=b.name;this.layerNameToLayer[a]=b;if(b.isBaseLayer){this.baseLayerNames.push(a)}},this);this.getRootNode().cascade(function(c){if(!c.attributes.layerNames){return true}var d=c.attributes.layerNames;for(var b=0;b<d.length;b++){var a=d[b];if(a.indexOf(this.separator)!=-1){var a=a.split(this.separator)[0];this.layersWithSublayers[a]=true}if(!this.nodeIdToLayers[c.id]){this.nodeIdToLayers[c.id]=[]}this.nodeIdToLayers[c.id].push(this.layerNameToLayer[a])}},this);this.getRootNode().cascade(function(d){var c=d.attributes.checked;var e=d.attributes.layerNames;if(!e){return}for(var b=0;b<e.length;b++){var a=e[b];if(!a){continue}if(!this.layerToNodeIds[a]){this.layerToNodeIds[a]=[]}this.layerToNodeIds[a].push(d.id);this.nodeIdToNode[d.id]=d}},this)},_updateCheckboxAncestors:function(){var d={};var c=this;function b(h){if(!c.hasCheckbox(h)){throw new Error(arguments.callee.name+" should only be called on checkbox nodes")}var g=[];h.eachChild(function(j){if(c.hasCheckbox(j)){g.push(j)}},this);if(g.length==0){return h.attributes.checked}var f=true;Ext.each(g,function(j){if(!b(j)){f=false;return false}},this);c.setNodeChecked(h,f,false);delete d[h.id];return f}var a=[];this.getRootNode().cascade(function(f){if(this.hasCheckbox(f)){a.push(f);d[f.id]=true}},this);var e;while(e=a.shift()){if(d[e.id]){b(e)}}},_handleModelChange:function LT__handleModelChange(n,h){if(n){n.cascade(function(o){this.setNodeChecked(o,h,false)},this)}this._updateCheckboxAncestors();if(!this.map){return}this._updateCachedObjects();function f(){var o={};Ext.each(this.map.layers,function(r){var q=r.name;o[q]=r.visibility;if(!(r instanceof OpenLayers.Layer.WMS)&&!(r instanceof OpenLayers.Layer.WMS.Untiled)&&!(r instanceof OpenLayers.Layer.MapServer)){return}if(!this.layersWithSublayers[r.name]){return}if(r.isBaseLayer){OpenLayers.Console.error("Using sublayers on a base layer is not supported (base layer is "+q+")")}if(!r._origLayers){r._origLayers=r.params.LAYERS||r.params.layers}var t=r._origLayers;if(t instanceof Array){for(var p=0;p<t.length;p++){var s=t[p];o[q+this.separator+s]=r.visibility}}},this);return o}function d(p){var o={};this.getRootNode().cascade(function(t){var s=t.attributes.checked;var v=t.attributes.layerNames;var u=null;if(!v){return}for(var r=0;r<v.length;r++){var q=v[r];if(!q){continue}if(p[q]==undefined){OpenLayers.Console.error("Invalid layer: ",q)}if(t.attributes.radio){u=t.attributes.radioGrp||"radioGrp";if(!c[u]){c[u]={}}c[u][q]=s}if(o[q]){continue}if(t==n){if(this.baseLayerNames.indexOf(q)!=-1){l=q}if(u){g[0]=u;g[1]=q}o[q]=true}p[q]=s}},this);return p}function k(q,p,s){var r=0;for(var o=0;o<this.baseLayerNames.length;o++){if(q[this.baseLayerNames[o]]){r++}}if(r==1){return q}for(var o=0;o<this.baseLayerNames.length;o++){q[this.baseLayerNames[o]]=false}if(p){q[p]=true;return q}if(!s){return q}q[s]=true;return q}function m(q,s,p){for(var r in p){for(var o in p[r]){if(s[0]==r){q[o]=o==s[1]}else{q[o]=p[r][o]}}}return q}function a(u){for(var q in u){var s=this.layerToNodeIds[q];if(!s){continue}for(var r=0;r<s.length;r++){var t=this.nodeIdToNode[s[r]];if(!t){continue}var v=t.attributes.layerNames;if(!v){OpenLayers.Console.error("unexpected state");continue}var o=true;for(var p=0;p<v.length;p++){var q=v[p];if(!q){continue}if(!u[q]){o=false;break}}this.setNodeChecked(t,o,false)}}}function b(x){var y={};for(var w in x){var p=x[w];var z=w.split(this.separator);if(z.length!=2){continue}delete x[w];w=z[0];var A=z[1];if(!y[w]){y[w]=[]}if(p){y[w].push(A)}}for(w in y){if(x[w]!==undefined){delete x[w]}}for(var w in x){var v=this.layerNameToLayer[w];if(!v){OpenLayers.Console.error("Non existing layer name",w);continue}if(this.baseLayerNames.indexOf(w)!=-1){if(x[w]){this.map.setBaseLayer(v)}}else{v.setVisibility(x[w])}}for(var w in y){var v=this.layerNameToLayer[w];var s=y[w];if(v.isBaseLayer){OpenLayers.Console.error("base layer for sublayer are not supported");return}if(s.length==0){v.setVisibility(false,true)}else{if(!this.enableDD){if(!v._origLayers){OpenLayers.Console.error("Assertion failure")}var u=v._origLayers;var t=[];for(var r=0;r<u.length;r++){var q=u[r];if(s.indexOf(q)!=-1){t.push(q)}}s=t}var o=v.params.LAYERS?"LAYERS":"layers";if(!mapfish.Util.arrayEqual(v.params[o],s)){v.params[o]=s;v.redraw()}v.setVisibility(true,true)}}}var j;if(this.map.baseLayer){j=this.map.baseLayer.name}var l;var c={};var g=[];var e=f.call(this);e=d.call(this,e);k.call(this,e,l,j);m.call(this,e,g,c);a.call(this,e);b.call(this,e)},_extractOLModel:function LT__extractOLModel(){var k=[];var d=this.map.layers.slice();if(!this.ascending){d.reverse()}for(var m=0;m<d.length;m++){var e=d[m];var f=[];if(e instanceof OpenLayers.Layer.WMS||e instanceof OpenLayers.Layer.WMS.Untiled||e instanceof OpenLayers.Layer.MapServer){var h=e.params.LAYERS||e.params.layers;if(h instanceof Array){for(var g=0;g<h.length;g++){var n=h[g];var a;if(this.showWmsLegend){a=mapfish.Util.getIconUrl(e.url,{layer:n})}var b={text:n,checked:e.getVisibility(),icon:a,layerName:e.name+this.separator+n,children:[],cls:"cf-wms-node"};if(this.ascending){f.push(b)}else{f.unshift(b)}}}}var c={text:e.name,checked:e.getVisibility(),layerName:(f.length>0?null:e.name),children:f};if(!e.displayInLayerSwitcher){c.uiProvider=function(){};c.hidden=true;c.uiProvider.prototype={render:function(){},renderIndent:function(){},updateExpandIcon:function(){}}}k.push(c)}return k},_updateOrder:function(){this._updateCachedObjects();function d(j,g){for(var h=0;h<j.length;h++){var f=j[h];if(f.name==g){return h}}return -1}var a=this.map.layers.slice();var e={};var b=[];this.getRootNode().cascade(function(f){if(this.ascending){b.push(f)}else{b.unshift(f)}},this);Ext.each(b,function(f){var g=this.nodeIdToLayers[f.id];if(!g){return}Ext.each(g,function(k){var j=k.name;if(e[j]){return}e[j]=true;var h=d(a,j);if(h==-1||!this.layerNameToLayer[j]){throw new Error("Layer "+j+" not available")}a.splice(h,1);a.push(this.layerNameToLayer[j])},this)},this);this._updateCheckboxAncestors();this.map.layers=a;for(var c=0;c<this.map.layers.length;c++){this.map.setLayerZIndex(this.map.layers[c],c)}},_fixupModel:function(){this.getRootNode().cascade(function(b){var a=b.attributes;if(!a.layerNames&&a.layerName){a.layerNames=[a.layerName];delete a.layerName}},this);if(this.map){this._updateCachedObjects()}this.getRootNode().cascade(function(c){var d;if(!c.attributes.radio&&(!this.map||!(d=this.nodeIdToLayers[c.id]))){return}var b=false;var a=false;if(d){b=true;Ext.each(d,function(e){if(!e.isBaseLayer){b=false}if(e.displayInLayerSwitcher){a=true}},this)}else{a=true}if((b||c.attributes.radio)&&a){c.attributes.uiProvider=mapfish.widgets.RadioTreeNodeUI;if(c.ui){c.ui=new mapfish.widgets.RadioTreeNodeUI(c)}}},this)},initComponent:function(){this.eventModel=new mapfish.widgets.LayerTreeEventModel(this);mapfish.widgets.LayerTree.superclass.initComponent.call(this);this.addListener("checkchange",function d(g,f){this._handleModelChange(g,f)},this);this.addListener("radiochange",function b(g,f){this._handleModelChange(g,f)},this);this._automaticModel=!this.model;if(!this.model){this.model=this._extractOLModel()}var a={text:"Root",draggable:false,id:"source",children:this.model,leaf:false};function e(f){var j=new Ext.tree.TreeNode(f);console.log(f);var h=f.children;j.leaf=!h;if(!h){return j}for(var g=0;g<h.length;g++){if(!h[g]){continue}j.appendChild(e(h[g]))}return j}var c=e(a);this.setRootNode(c);this._fixupModel();if(this.enableDD){this.addListener("dragdrop",function(){this._updateOrder(arguments)},this);this.addListener("nodedragover",this.isDragAllowed,this)}if(!this._automaticModel){this._handleModelChange(null,null);if(this.enableDD){this._updateOrder()}}},isDragAllowed:function(c){var a=c.data.node;var b=c.target;if(c.point=="above"||c.point=="below"){b=b.parentNode}if(a.parentNode!=b){return false}return true},onRender:function(b,a){if(!this.el){this.el=document.createElement("div")}mapfish.widgets.LayerTree.superclass.onRender.apply(this,arguments)}});Ext.reg("layertree",mapfish.widgets.LayerTree);Ext.namespace("mapfish.widgets","mapfish.widgets.recenter");mapfish.widgets.recenter.Coords=function(a){Ext.apply(this,a);mapfish.widgets.recenter.Coords.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.recenter.Coords,mapfish.widgets.recenter.Base,{addItems:function(){this.removeAll();this.add({xtype:"numberfield",fieldLabel:OpenLayers.i18n("mf.recenter.x"),name:"coordx"});this.add({xtype:"numberfield",fieldLabel:OpenLayers.i18n("mf.recenter.y"),name:"coordy"});if(this.scales){this.addScaleCombo()}this.addRecenterButton()},recenter:function(){var b=this.getForm().getValues();var a=b.coordx;var d=b.coordy;if(this.checkCoords(a,d)){var c;if(this.scales&&b.scaleValue){resolution=OpenLayers.Util.getResolutionFromScale(b.scaleValue,this.map.units);c=this.map.getZoomForResolution(resolution)}this.recenterOnCoords(a,d,c)}},checkCoords:function(b,c){if(!b||!c){this.showError(OpenLayers.i18n("mf.recenter.missingCoords"));return false}var a=this.map.maxExtent;if(b<a.left||b>a.right||c<a.bottom||c>a.top){this.showError(OpenLayers.i18n("mf.recenter.outOfRangeCoords",{myX:b,myY:c,coordX:OpenLayers.i18n("mf.recenter.x"),coordY:OpenLayers.i18n("mf.recenter.y"),minCoordX:a.left,maxCoordX:a.right,minCoordY:a.bottom,maxCoordY:a.top}));return false}return true}});Ext.reg("coordsrecenter",mapfish.widgets.recenter.Coords);mapfish.widgets.LayerTree.getNodeLayers=function(a,c){var b=[];c.cascade(function(e){var d=a.nodeIdToLayers[e.id];if(d){b=b.concat(d)}});return b};mapfish.widgets.LayerTree.removeNode=function(a,c){c.cascade(function(l){if(l.attributes&&l.attributes.layerNames){var k=l.attributes.layerNames;for(var f=0;f<k.length;++f){var e=k[f].split(a.separator);var j=a.layerNameToLayer[e[0]];var h=e[1];var g;if(j.params.LAYERS){g=j.params.LAYERS=mapfish.Util.fixArray(j.params.LAYERS)}else{g=j.params.layers=mapfish.Util.fixArray(j.params.layers)}if(h&&g){g.remove(h)}if(!h||!g||g.length==0){j.destroy()}else{j.redraw()}}}});var b=c.parentNode;c.remove();while(b){if(b.hasChildNodes()){break}var d=b;b=b.parentNode;d.remove()}a._updateCachedObjects()};mapfish.widgets.LayerTree.MenuFeatures={opacitySlide:function(a,c,b){if(b.length==0){return null}return{text:OpenLayers.Lang.translate("mf.layertree.opacity"),menu:{plain:true,items:[mapfish.widgets.LayerTree.MenuFeatures.opacitySlideDirect(a,c,b)]}}},opacitySlideDirect:function(a,d,c){if(c.length==0){return null}var e=0;for(var b=0;b<c.length;++b){e+=c[b].opacity==null?1:c[b].opacity}e=e/c.length;return new Ext.menu.Adapter(new Ext.Slider({width:200,value:e*100,listeners:{change:function(g,h){for(var f=0;f<c.length;++f){c[f].setOpacity(h/100)}}}}))},remove:function(a,e,d){if(d.length==0){return null}for(var c=0;c<d.length;++c){var b=d[c];if(b.isBaseLayer&&b.getVisibility()){return null}}return{text:OpenLayers.Lang.translate("mf.layertree.remove"),handler:function(){mapfish.widgets.LayerTree.removeNode(a,e)}}},zoomToExtent:function(a,e,d){if(d.length==0){return null}var f=null;for(var c=0;c<d.length;++c){var b=d[c];if(f){f.extend(b.maxExtent)}else{f=b.maxExtent.clone()}}return{text:OpenLayers.Lang.translate("mf.layertree.zoomToExtent"),handler:function(){a.map.zoomToExtent(f)}}}};mapfish.widgets.LayerTree.createContextualMenuPlugin=function(a){return{init:function(b){function c(l,m){var k=mapfish.widgets.LayerTree.getNodeLayers(b,l);var d=[];for(var f=0;f<a.length;++f){var h=mapfish.widgets.LayerTree.MenuFeatures[a[f]];var g=h(b,l,k);if(g){d.push(g)}}if(d.length>0){var n=new Ext.menu.Menu({ignoreParentClick:true,defaults:{scope:b},items:d});n.showAt(m.getXY());n.on("hide",function(){n.destroy()})}}if(Ext.isOpera){b.on("click",function(d,f){if(f.hasModifier()){f.stopEvent();c(d,f)}})}else{b.on("contextMenu",function(d,f){f.stopEvent();c(d,f)})}}}};mapfish.widgets.LayerTree.createDisableLayersPlugin=function(a){return{init:function(b){if(!b.map){return}b.map.events.on({zoomend:function(){function c(e,d){if(d){e.disable()}else{var f=b.map.getScale();f=f*a/OpenLayers.DOTS_PER_INCH;if(f<e.attributes.minScale||f>e.attributes.maxScale){e.disable();d=true}else{e.enable();d=false}}e.eachChild(function(g){c(g,d)})}c(b.root,false)}})}}};Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");mapfish.widgets.print.BaseWidget=function(a){mapfish.widgets.print.BaseWidget.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.print.BaseWidget,Ext.Panel,{pageDrag:null,rotateHandle:null,layer:null,layout:"fit",initComponent:function(){mapfish.widgets.print.BaseWidget.superclass.initComponent.call(this);this.addEvents("configloaded");this.on("expand",this.setUp,this);this.on("collapse",this.tearDown,this);this.on("activate",this.setUp,this);this.on("deactivate",this.tearDown,this);this.on("enable",this.setUp,this);this.on("disable",this.tearDown,this);this.on("render",function(){var a=this.mask=new Ext.LoadMask(this.body,{msg:OpenLayers.Lang.translate("mf.print.loadingConfig")});if(this.config==null){a.show()}},this);if(!this.initPrint()){this.fillComponent()}},configReceived:function(a){mapfish.widgets.print.Base.configReceived.call(this,a);this.fillComponent();this.doLayout();this.setUp();this.fireEvent("configloaded")},configFailed:function(){mapfish.widgets.print.Base.configFailed.call(this);this.add({border:false,region:"center",html:OpenLayers.Lang.translate("mf.print.serverDown")});this.doLayout();this.config=false},isReallyVisible:function(){if(!this.isVisible()||!this.body.isVisible(true)){return false}var a=true;this.bubble(function(b){return a=a&&b.isVisible()&&(!b.body||b.body.isVisible())},this);return a},setUp:function(){if(!this.disabled&&this.isReallyVisible()&&this.config&&!this.layer){this.map.addLayer(this.getOrCreateLayer());this.pageDrag.activate()}},tearDown:function(){if(this.config&&this.pageDrag&&this.layer){this.pageDrag.destroy();this.pageDrag=null;this.removeRotateHandle();this.layer.removeFeatures(this.layer.features);this.layer.destroy();this.layer=null}},getOrCreateLayer:function(){if(!this.layer){var a=this;this.layer=new OpenLayers.Layer.Vector("_Print"+this.getId(),{displayInLayerSwitcher:false,calculateInRange:function(){return true}});this.pageDrag=new OpenLayers.Control.DragFeature(this.layer);this.map.addControl(this.pageDrag);var b=null;this.pageDrag.onStart=function(c){OpenLayers.Control.DragFeature.prototype.onStart.apply(this,arguments);b=c;if(c.attributes.rotate){a.pageRotateStart(c)}else{a.pageDragStart(c)}};this.pageDrag.onDrag=function(c){OpenLayers.Control.DragFeature.prototype.onDrag.apply(this,arguments);if(!c){c=b}if(c.attributes.rotate){a.pageRotated(c)}};this.pageDrag.onComplete=function(c){OpenLayers.Control.DragFeature.prototype.onComplete.apply(this,arguments);if(!c){c=b}if(c.attributes.rotate){a.pageRotateComplete(c)}else{a.pageDragComplete(c)}b=null};this.afterLayerCreated()}return this.layer},pageRotateStart:function(a){},pageRotated:function(b){var a=b.attributes.center;var f=b.geometry;var d=Math.atan2(f.x-a.x,f.y-a.y)*180/Math.PI;var c=b.attributes.page;c.attributes.rotation=d;var e=new OpenLayers.Geometry.Point(a.x,a.y);c.geometry.rotate(b.attributes.prevAngle-d,e);this.layer.drawFeature(c);this.setCurRotation(Math.round(d));b.attributes.prevAngle=d},pageRotateComplete:function(a){this.createRotateHandle(a.attributes.page)},pageDragStart:function(a){this.removeRotateHandle()},removeRotateHandle:function(){if(this.rotateHandle){this.rotateHandle.destroy();this.rotateHandle=null}},pageDragComplete:function(a){if(this.getCurLayout().rotation){this.createRotateHandle(a)}},createRotateHandle:function(c){this.removeRotateHandle();var g=c.geometry.components[0].components[2];var b=c.geometry.components[0].components[3];var f=(g.x+b.x)/2;var e=(g.y+b.y)/2;var d=new OpenLayers.Geometry.Point(f,e);var a=this.getCenterRectangle(c);this.rotateHandle=new OpenLayers.Feature.Vector(d,{rotate:true,page:c,center:{x:a[0],y:a[1]},prevAngle:c.attributes.rotation});this.layer.addFeatures(this.rotateHandle)},createRectangle:function(a,g,f,c){var d=this.getExtent(a,g,f);var e=d.toGeometry();if(c!=0){var h=new OpenLayers.Geometry.Point(a.lon,a.lat);e.rotate(-c,h)}var b=new OpenLayers.Feature.Vector(e,{rotation:c});this.layer.addFeatures(b);return b},getCenterRectangle:function(b){var a=b.geometry.getBounds().getCenterLonLat();return[a.lon,a.lat]},getExtent:function(a,g,e){var f=OpenLayers.INCHES_PER_UNIT[this.map.baseLayer.units];var c=e.map;var b=c.width/72/f*g/2;var d=c.height/72/f*g/2;return new OpenLayers.Bounds(a.lon-b,a.lat-d,a.lon+b,a.lat+d)},fitScale:function(g){var h=this.config.scales;if(h.length==0){return}var f=[];for(var d=0;d<h.length;++d){f.push(parseFloat(h[d].value))}f.sort(function(m,j){return m-j});var a=this.map.getExtent();var e=OpenLayers.INCHES_PER_UNIT[this.map.baseLayer.units];var l=g.map;var k=Math.min(a.getWidth()/l.width*72*e,a.getHeight()/l.height*72*e);var b=f[0];for(var c=1;c<f.length;++c){if(f[c]<=k){b=f[c]}else{break}}return b},print:function(){this.overrides[this.layer.name]={visibility:false};mapfish.widgets.print.Base.print.call(this);delete this.overrides[this.layer.name]},getLayoutForName:function(a){var c=this.config.layouts;for(var b=0;b<c.length;++b){var d=c[b];if(d.name==a){return d}}},createScaleCombo:function(){var a=new Ext.data.JsonStore({root:"scales",fields:["name","value"],data:this.config});return new Ext.form.ComboBox({fieldLabel:OpenLayers.Lang.translate("mf.print.scale"),store:a,displayField:"name",valueField:"value",typeAhead:false,mode:"local",id:"scale_"+this.getId(),hiddenId:"scaleId_"+this.getId(),hiddenName:"scale",name:"scale",editable:false,triggerAction:"all",value:this.config.scales[this.config.scales.length-1].value})},createDpiCombo:function(a){if(this.config.dpis.length>1){var b=new Ext.data.JsonStore({root:"dpis",fields:["name","value"],data:this.config});return{fieldLabel:OpenLayers.Lang.translate("mf.print.dpi"),xtype:"combo",store:b,displayField:"name",valueField:"value",typeAhead:false,mode:"local",id:"dpi_"+this.getId(),hiddenId:"dpiId_"+this.getId(),hiddenName:a,name:a,editable:false,triggerAction:"all",value:this.config.dpis[0].value}}else{return{xtype:"hidden",name:a,value:this.config.dpis[0].value}}},createLayoutCombo:function(a){if(this.config.layouts.length>1){var b=new Ext.data.JsonStore({root:"layouts",fields:["name"],data:this.config});return new Ext.form.ComboBox({fieldLabel:OpenLayers.Lang.translate("mf.print.layout"),store:b,displayField:"name",valueField:"name",typeAhead:false,mode:"local",id:"layout_"+this.getId(),hiddenId:"layoutId_"+this.getId(),hiddenName:a,name:a,editable:false,triggerAction:"all",value:this.config.layouts[0].name})}else{return new Ext.form.Hidden({name:a,value:this.config.layouts[0].name})}},createRotationTextField:function(){var d=this.config.layouts;var a=false;for(var c=0;c<d.length&&!a;++c){a=d[c].rotation}if(a){var b=/^-?[0-9]+$/;return new Ext.form.TextField({fieldLabel:OpenLayers.Lang.translate("mf.print.rotation"),name:"rotation",value:"0",maskRe:/^[-0-9]$/,msgTarget:"side",validator:function(e){return b.test(e)?true:"Not a number"}})}else{return null}},fillComponent:null,afterLayerCreated:null,fillSpec:null,getCurLayout:null,setCurRotation:null});OpenLayers.Util.applyDefaults(mapfish.widgets.print.BaseWidget.prototype,mapfish.widgets.print.Base);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");mapfish.widgets.print.MultiPage=Ext.extend(mapfish.widgets.print.BaseWidget,{formConfig:null,columns:null,zoomToExtentEnabled:true,grid:null,printButton:null,freezeGeometryRefresh:false,fillComponent:function(){this.columns=this.columns||[];var a=this.add({border:false,layout:"border",id:this.getId()+"InnerPanel"});this.createGlobalForm(a);this.createGrid(a)},setUp:function(){if(this.config){if(Ext.isGecko3){var a=this.formPanel.getEl().parent();a.setStyle("position","absolute");setTimeout(function(){a.setStyle("position","relative")},20)}mapfish.widgets.print.BaseWidget.prototype.setUp.call(this)}},createGlobalForm:function(c){var d=OpenLayers.Util.extend({region:"south",bodyStyle:"padding: 7px 0 0 0;",border:false,bodyBorder:false,id:this.getId()+"formPanel"},this.formConfig);var a=this.formPanel=new Ext.form.FormPanel(d);var b=this.createLayoutCombo("layout");if(this.config.layouts.length>1){b.on("select",this.layoutChanged,this)}a.add(b);a.add(this.createDpiCombo("dpi"));this.printButton=a.addButton({text:OpenLayers.Lang.translate("mf.print.print"),scope:this,handler:this.print,disabled:true});c.add(a)},createGrid:function(f){var c=this.createScaleCombo();c.on("select",this.updateCurrentRectangle,this);var j=this;var d=[{header:OpenLayers.Lang.translate("mf.print.scale"),dataIndex:"scale",editor:c,renderer:function(k){return j.getScaleName(k)}}];var h=this.createRotationTextField();if(h!=null){d.push({header:OpenLayers.Lang.translate("mf.print.rotation"),dataIndex:"rotation",editor:h,id:this.getId()+"_rotation",hidden:!this.config.layouts[0].rotation})}if(this.columns){d.push.apply(d,this.columns)}var g=[];for(var e=0;e<d.length;++e){g.push({name:d[e].dataIndex})}var b=new Ext.data.SimpleStore({fields:g});var a=this.grid=new Ext.grid.EditorGridPanel({region:"center",border:false,id:this.getId()+"PagesGrid",autoScroll:true,enableColumnHide:false,enableHdMenu:false,store:b,viewConfig:{forceFit:true,emptyText:OpenLayers.Lang.translate("mf.print.noPage")},sm:new Ext.grid.RowSelectionModel({singleSelect:true}),clicksToEdit:1,columns:d,bbar:[{text:OpenLayers.Lang.translate("mf.print.addPage"),scope:this,handler:this.addPage},{text:OpenLayers.Lang.translate("mf.print.remove"),scope:this,handler:this.removeSelected,id:this.getId()+"_remove",disabled:true},{text:OpenLayers.Lang.translate("mf.print.clearAll"),scope:this,handler:this.clearPages}]});f.add(a);a.getSelectionModel().addListener("selectionchange",this.selectionChanged,this);a.getStore().addListener("update",function(m,k,l){if(!this.freezeGeometryRefresh){this.updateRectangle(k);this.updatePrintLayerStyle()}},this);a.getStore().addListener("remove",function(l,k,m){this.layer.removeFeatures(k.data.rectangle);this.removeRotateHandle();if(l.getCount()==0){this.printButton.disable()}},this);a.getStore().addListener("clear",function(){this.layer.removeFeatures(this.layer.features);this.printButton.disable()},this)},selectionChanged:function(){this.updatePrintLayerStyle();var c=Ext.getCmp(this.getId()+"_remove");var a=this.grid.getSelectionModel().getSelected();if(a){if(this.zoomToExtentEnabled){var b=a.data.rectangle.geometry.getBounds().clone();b.extend(this.map.getExtent());this.map.zoomToExtent(b)}c.enable();var d=this.getCurLayout();if(d.rotation){this.createRotateHandle(a.data.rectangle)}}else{c.disable()}},updatePrintLayerStyle:function(){var c=this.grid.getSelectionModel().getSelected();var e=null;for(var b=0;b<this.layer.features.length;++b){var a=this.layer.features[b];var d=a.data.record==c;a.style=OpenLayers.Feature.Vector.style[d?"select":"default"];if(d&&b!=this.layer.features.length-1){e=a;this.layer.removeFeatures(a)}}if(e){this.layer.addFeatures(e)}this.layer.redraw()},addPage:function(){var f=this.getCurLayout();var h=this.fitScale(f);var d=this.createRectangle(this.map.getCenter(),h,f,0);var e={scale:h,rotation:0,rectangle:d};for(var c=0;c<this.columns.length;++c){var g=this.columns[c].dataIndex;if(e[g]==null){e[g]=""}}var a=this.grid.getStore();var b=new a.recordType(e);a.add(b);d.data.record=b;this.grid.getSelectionModel().selectLastRow();this.printButton.enable()},clearPages:function(){this.grid.stopEditing();this.grid.getStore().removeAll()},removeSelected:function(){this.grid.stopEditing();var a=this.grid.getSelectionModel().getSelected();this.grid.getStore().remove(a)},layoutChanged:function(){this.grid.getStore().each(function(d){this.updateRectangle(d)},this);this.updatePrintLayerStyle();var a=this.grid.getColumnModel();var b=a.getIndexById(this.id+"_rotation");if(b>=0){var c=this.getCurLayout();a.setHidden(b,!c.rotation)}},updateCurrentRectangle:function(){this.updateRectangle(this.grid.getSelectionModel().getSelected());this.updatePrintLayerStyle()},updateRectangle:function(b){this.grid.stopEditing();this.layer.removeFeatures(b.data.rectangle);var d=this.getCurLayout();var f=b.get("scale");var e=d.rotation?b.get("rotation"):0;var a=b.data.rectangle.geometry.getBounds().getCenterLonLat();var c=this.createRectangle(a,f,d,e);c.data.record=b;b.data.rectangle=c;var g=this.grid.getSelectionModel();if(g.getSelected()==b){if(d.rotation){this.createRotateHandle(c)}else{this.removeRotateHandle()}}},afterLayerCreated:function(){if(this.grid.getStore().getCount()!=0){this.grid.getStore().each(function(c){this.layer.addFeatures(c.data.rectangle)},this);this.updatePrintLayerStyle();var b=this.grid.getSelectionModel();var a=b.getSelected();if(a&&this.getCurLayout().rotation){this.createRotateHandle(a.data.rectangle)}}else{this.addPage()}},pageRotateStart:function(a){mapfish.widgets.print.BaseWidget.prototype.pageRotateStart.call(this,a);this.grid.stopEditing()},pageDragStart:function(a){mapfish.widgets.print.BaseWidget.prototype.pageDragStart.call(this,a);var b=this.zoomToExtentEnabled;var c=this.grid.getSelectionModel();if(c.getSelected()!=a.data.record){this.zoomToExtentEnabled=false;c.selectRecords([a.data.record]);this.zoomToExtentEnabled=b}this.grid.stopEditing()},getCurDpi:function(){var a=this.formPanel.getForm().getValues();return a.dpi},getCurLayoutName:function(){var a=this.formPanel.getForm().getValues();return a.layout},getCurLayout:function(){var a=this.getCurLayoutName();return this.getLayoutForName(a)},setCurRotation:function(a){var b=this.grid.getSelectionModel().getSelected();this.freezeGeometryRefresh=true;b.set("rotation",a);this.freezeGeometryRefresh=false},fillSpec:function(a){var c=a.spec;var b=this.getCurLayout();this.formPanel.getForm().items.each(function(d){c[d.getName()]=d.getValue()},this);this.grid.getStore().each(function(d){var f={};for(var e in d.data){if(e=="rectangle"){f.center=this.getCenterRectangle(d.data.rectangle)}else{if(e=="rotation"&&!b.rotation){}else{f[e]=d.data[e]}}}c.pages.push(f)},this)},getScaleName:function(d){var c=this.config.scales;for(var a=0;a<c.length;++a){var b=c[a];if(b.value==d){return b.name}}}});Ext.reg("print-multi",mapfish.widgets.print.MultiPage);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");mapfish.widgets.print.SimpleForm=Ext.extend(mapfish.widgets.print.BaseWidget,{formConfig:null,wantResetButton:true,scale:null,rectangle:null,rotation:null,infoPanel:null,fillComponent:function(){var c=OpenLayers.Util.extend({border:false,bodyBorder:false},this.formConfig);var a=this.formPanel=new Ext.form.FormPanel(c);var b=this.createLayoutCombo("/layout");if(this.config.layouts.length>1){b.on("select",this.updateRectangle,this)}a.add(b);a.add(this.createDpiCombo("/dpi"));this.scale=a.add(this.createScaleCombo());this.scale.on("select",this.updateRectangle,this);this.rotation=this.createRotationTextField();if(this.rotation!=null){this.rotation.setDisabled(!this.config.layouts[0].rotation);a.add(this.rotation);this.rotation.on("change",function(){if(!this.rotation.isValid(true)){this.rotation.setValue(0)}this.updateRectangle()},this)}if(this.infoPanel!=null){a.add(this.infoPanel)}if(this.wantResetButton){a.addButton({text:OpenLayers.Lang.translate("mf.print.resetPos"),scope:this,handler:function(){this.setCurScale(this.fitScale(this.getCurLayout()));if(this.rotation){this.setCurRotation(0)}this.createTheRectangle()}})}a.addButton({text:OpenLayers.Lang.translate("mf.print.print"),scope:this,handler:this.print});this.add(a)},updateRectangle:function(){this.layer.removeFeatures(this.rectangle);var a=this.rectangle.geometry.getBounds().getCenterLonLat();var b=this.getCurLayout();this.rectangle=this.createRectangle(a,this.getCurScale(),b,this.rotation&&b.rotation?this.rotation.getValue():0);if(this.rotation){this.rotation.setDisabled(!b.rotation);if(!b.rotation){this.rotation.setValue(0)}}if(b.rotation){this.createRotateHandle(this.rectangle)}else{this.removeRotateHandle()}},createTheRectangle:function(){if(this.rectangle){this.layer.removeFeatures(this.rectangle)}var a=this.getCurLayout();this.rectangle=this.createRectangle(this.map.getCenter(),this.getCurScale(),this.getCurLayout(),this.rotation&&a.rotation?this.rotation.getValue():0);if(a.rotation){this.createRotateHandle(this.rectangle)}},afterLayerCreated:function(){this.setCurScale(this.fitScale(this.getCurLayout()));this.createTheRectangle()},getCurLayout:function(){var a=this.formPanel.getForm().getValues();var b=a["/layout"];return this.getLayoutForName(b)},getCurScale:function(){var a=this.formPanel.getForm().getValues();return a.scale},setCurScale:function(a){this.scale.setValue(a)},getCurDpi:function(){var a=this.formPanel.getForm().getValues();return a.dpi},setCurRotation:function(a){this.rotation.setValue(a)},fillSpec:function(a){var b={center:this.getCenterRectangle(this.rectangle)};var c=a.spec;c.pages.push(b);this.formPanel.getForm().items.each(function(e){var d=e.getName();if(OpenLayers.String.startsWith(d,"/")){c[d.substr(1)]=e.getValue()}else{b[d]=e.getValue()}},this)}});Ext.reg("print-simple",mapfish.widgets.print.SimpleForm);mapfish.GeoStat=OpenLayers.Class({layer:null,format:null,url:null,requestSuccess:function(a){},requestFailure:function(a){},featureSelection:true,nameAttribute:null,indicator:null,defaultSymbolizer:{},selectSymbolizer:{strokeColor:"#000000"},legendDiv:null,initialize:function(e,b){this.map=e;this.addOptions(b);if(!this.layer){var d=new OpenLayers.StyleMap({"default":new OpenLayers.Style(OpenLayers.Util.applyDefaults(this.defaultSymbolizer,OpenLayers.Feature.Vector.style["default"])),select:new OpenLayers.Style(this.selectSymbolizer)});var c=new OpenLayers.Layer.Vector("geostat",{displayInLayerSwitcher:false,visibility:false,styleMap:d});e.addLayer(c);this.layer=c}if(this.featureSelection){this.layer.events.on({featureselected:this.showDetails,featureunselected:this.hideDetails,scope:this});var a=new OpenLayers.Control.SelectFeature(this.layer,{hover:true});e.addControl(a);a.activate()}if(this.url){OpenLayers.loadURL(this.url,"",this,this.onSuccess,this.onFailure)}this.legendDiv=Ext.get(b.legendDiv)},onSuccess:function(a){var c=a.responseXML;if(!c||!c.documentElement){c=a.responseText}var b=this.format||new OpenLayers.Format.GeoJSON();this.layer.addFeatures(b.read(c));this.requestSuccess(a)},onFailure:function(a){this.requestFailure(a)},addOptions:function(a){if(a){if(!this.options){this.options={}}OpenLayers.Util.extend(this.options,a);OpenLayers.Util.extend(this,a)}},extendStyle:function(d,c,a){var b=this.layer.styleMap.styles["default"];if(d){b.rules=d}if(c){b.setDefaultStyle(OpenLayers.Util.applyDefaults(c,b.defaultStyle))}if(a){if(!b.context){b.context={}}OpenLayers.Util.extend(b.context,a)}},applyClassification:function(a){this.layer.renderer.clear();this.layer.redraw();this.updateLegend();this.layer.setVisibility(true)},showDetails:function(h){var d=h.feature;var c=typeof this.nameAttribute=="string"?'<h4 style="margin-top:5px">'+d.attributes[this.nameAttribute]+"</h4>":"";c+=this.indicator+": "+d.attributes[this.indicator];var f=this.layer.map.getExtent();var g=new OpenLayers.LonLat(f.right,f.bottom);var b=new OpenLayers.Size(200,100);var a=new OpenLayers.Popup.AnchoredBubble(d.attributes[this.nameAttribute],g,b,c,0.5,false);var e=d.layer.styleMap.createSymbolizer(d,"default");a.setBackgroundColor(e.fillColor);this.layer.map.addPopup(a)},hideDetails:function(c){var b=this.layer.map;for(var a=b.popups.length-1;a>=0;--a){b.removePopup(b.popups[a])}},CLASS_NAME:"mapfish.GeoStat"});mapfish.GeoStat.Distribution=OpenLayers.Class({labelGenerator:function(a,b,c){return this.defaultLabelGenerator(a,b,c)},values:null,nbVal:null,minVal:null,maxVal:null,initialize:function(a,b){OpenLayers.Util.extend(this,b);this.values=a;this.nbVal=a.length;this.minVal=this.nbVal?mapfish.Util.min(this.values):0;this.maxVal=this.nbVal?mapfish.Util.max(this.values):0},defaultLabelGenerator:function(a,b,c){return a.lowerBound.toFixed(3)+" - "+a.upperBound.toFixed(3)+" ("+a.nbVal+")"},classifyWithBounds:function(e){var d=[];var g=[];var a=[];for(var b=0;b<this.values.length;b++){a.push(this.values[b])}a.sort(function(j,h){return j-h});var f=e.length-1;for(var b=0;b<f;b++){g[b]=0}for(var b=0;b<f-1;b){if(a[0]<e[b+1]){g[b]=g[b]+1;a.shift()}else{b++}}g[f-1]=this.nbVal-mapfish.Util.sum(g);for(var b=0;b<f;b++){d[b]=new mapfish.GeoStat.Bin(g[b],e[b],e[b+1],b==(f-1));var c=this.labelGenerator||this.defaultLabelGenerator;d[b].label=c(d[b],b,f)}return new mapfish.GeoStat.Classification(d)},classifyByEqIntervals:function(c){var b=[];for(var a=0;a<=c;a++){b[a]=this.minVal+a*(this.maxVal-this.minVal)/c}return this.classifyWithBounds(b)},classifyByQuantils:function(e){var a=this.values;a.sort(function(g,f){return g-f});var d=Math.round(this.values.length/e);var c=[];var b=(d==0)?0:d;if(a.length>0){c[0]=a[0];for(i=1;i<e;i++){c[i]=a[b];b+=d}c.push(a[a.length-1])}return this.classifyWithBounds(c)},sturgesRule:function(){return Math.floor(1+3.3*Math.log(this.nbVal,10))},classify:function(d,c,a){var b=null;if(!c){c=this.sturgesRule()}switch(d){case mapfish.GeoStat.Distribution.CLASSIFY_WITH_BOUNDS:b=this.classifyWithBounds(a);break;case mapfish.GeoStat.Distribution.CLASSIFY_BY_EQUAL_INTERVALS:b=this.classifyByEqIntervals(c);break;case mapfish.GeoStat.Distribution.CLASSIFY_BY_QUANTILS:b=this.classifyByQuantils(c);break;default:OpenLayers.Console.error("unsupported or invalid classification method")}return b},CLASS_NAME:"mapfish.GeoStat.Distribution"});mapfish.GeoStat.Distribution.CLASSIFY_WITH_BOUNDS=0;mapfish.GeoStat.Distribution.CLASSIFY_BY_EQUAL_INTERVALS=1;mapfish.GeoStat.Distribution.CLASSIFY_BY_QUANTILS=2;mapfish.GeoStat.Bin=OpenLayers.Class({label:null,nbVal:null,lowerBound:null,upperBound:null,isLast:false,initialize:function(c,d,b,a){this.nbVal=c;this.lowerBound=d;this.upperBound=b;this.isLast=a},CLASS_NAME:"mapfish.GeoStat.Bin"});mapfish.GeoStat.Classification=OpenLayers.Class({bins:[],initialize:function(a){this.bins=a},getBoundsArray:function(){var b=[];for(var a=0;a<this.bins.length;a++){b.push(this.bins[a].lowerBound)}if(this.bins.length>0){b.push(this.bins[this.bins.length-1].upperBound)}return b},CLASS_NAME:"mapfish.GeoStat.Classification"});mapfish.Protocol.MapFish=OpenLayers.Class(OpenLayers.Protocol.HTTP,{initialize:function(a){a=a||{};if(!a.format){a.format=new OpenLayers.Format.GeoJSON()}OpenLayers.Protocol.HTTP.prototype.initialize.call(this,a)},create:function(b,a){a=a||{};a.headers=OpenLayers.Util.extend(a.headers,{"Content-Type":"plain/text"});return OpenLayers.Protocol.HTTP.prototype.create.call(this,b,a)},handleCreate:function(b,a){this.handleCreateUpdate(b,a)},read:function(a){a.params=OpenLayers.Util.applyDefaults(a.params,this.options.params);if(a){this.filterAdapter(a)}return OpenLayers.Protocol.HTTP.prototype.read.call(this,a)},handleRead:function(d,a){var c=d.priv;if(a.callback){var b=c.status;if(b==200){d.features=this.parseFeatures(c);d.code=OpenLayers.Protocol.Response.SUCCESS}else{d.features=null;d.code=OpenLayers.Protocol.Response.FAILURE}a.callback.call(a.scope,d)}},_filterToParams:function(b,c){var h=b.CLASS_NAME;var j=h.substring(h.indexOf(".")+1,h.lastIndexOf("."));if(j!="Filter"){return false}var a=h.substring(h.lastIndexOf(".")+1);switch(a){case"Spatial":var k=b.type;switch(k){case OpenLayers.Filter.Spatial.BBOX:if(c.box){OpenLayers.Console.error("Filter contains multiple Spatial BBOX entries");return false}c.box=b.value.toBBOX();break;case OpenLayers.Filter.Spatial.DWITHIN:c.tolerance=b.distance;case OpenLayers.Filter.Spatial.WITHIN:if(c.lon){OpenLayers.Console.error("Filter contains multiple Spatial *WITHIN entries");return false}c.lon=b.value.x;c.lat=b.value.y;break;default:OpenLayers.Console.warn("Unknown spatial filter type "+k);return false}break;case"Comparison":var e=mapfish.Protocol.MapFish.COMP_TYPE_TO_OP_STR[b.type];if(e===undefined){OpenLayers.Console.error("Unknown comparison filter type "+b.type);return false}c[b.property+"__"+e]=b.value;c.queryable=c.queryable||[];c.queryable.push(b.property);break;case"Logical":if(b.type!=OpenLayers.Filter.Logical.AND){OpenLayers.Console.error("Unsupported logical filter type "+b.type);return false}if(b.filters.length==0){OpenLayers.Console.error("Empty logical AND filter");return false}for(var d=0;d<b.filters.length;d++){var g=b.filters[d];if(!this._filterToParams(g,c)){return false}}break;default:OpenLayers.Console.warn("Unknown filter type "+a);return false}return true},filterAdapter:function(a){if(!a||!a.filter||!a.filter.CLASS_NAME){return}var b={};if(this._filterToParams(a.filter,b)){a.params=OpenLayers.Util.extend(a.params,b)}delete a.filter},update:function(c,b){b=b||{};var a=b.url||c.url||this.options.url+"/"+c.fid;b.url=a;b.headers=OpenLayers.Util.extend(b.headers,{"Content-Type":"plain/text"});return OpenLayers.Protocol.HTTP.prototype.update.call(this,c,b)},handleUpdate:function(b,a){this.handleCreateUpdate(b,a)},handleCreateUpdate:function(d,a){var c=d.priv;if(a.callback){var b=c.status;if(b==201){d.features=this.parseFeatures(c);d.code=OpenLayers.Protocol.Response.SUCCESS}else{d.features=null;d.code=OpenLayers.Protocol.Response.FAILURE}a.callback.call(a.scope,d)}},"delete":function(c,b){b=b||{};var a=b.url||c.url||this.options.url+"/"+c.fid;b.url=a;return OpenLayers.Protocol.HTTP.prototype["delete"].call(this,c,b)},handleDelete:function(d,a){var c=d.priv;if(a.callback){var b=c.status;if(b==204){d.code=OpenLayers.Protocol.Response.SUCCESS}else{d.code=OpenLayers.Protocol.Response.FAILURE}a.callback.call(a.scope,d)}},CLASS_NAME:"mapfish.Protocol.MapFish"});mapfish.Protocol.MapFish.COMP_TYPE_TO_OP_STR={};(function(){var a=mapfish.Protocol.MapFish.COMP_TYPE_TO_OP_STR;a[OpenLayers.Filter.Comparison.EQUAL_TO]="eq";a[OpenLayers.Filter.Comparison.NOT_EQUAL_TO]="ne";a[OpenLayers.Filter.Comparison.LESS_THAN]="lt";a[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO]="lte";a[OpenLayers.Filter.Comparison.GREATER_THAN]="gt";a[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO]="gte";a[OpenLayers.Filter.Comparison.LIKE]="ilike"})();mapfish.Protocol.MapFish.create=function(a){return mapfish.Protocol.decorateProtocol({protocol:new mapfish.Protocol.MapFish(a),MergeFilterDecorator:null,TriggerEventDecorator:null})};mapfish.Routing=OpenLayers.Class({url:null,vector:null,parser:null,initialize:function(b,c,a){this.url=b;this.map=c;OpenLayers.Util.extend(this,a);this.parser=new OpenLayers.Format.GeoJSON();this.vector=new OpenLayers.Layer.Vector("Routing");this.map.addLayer(this.vector)},onSuccess:function(a){if(a.responseText.search(/^error/)!=-1){OpenLayers.Console.error("Routing data returned by server contains error: "+a.responseText);this.onFailure(a);return}this.vector.destroyFeatures();var c=this.parser.read(a.responseText);if(!c){this.onFailure("can't parse features");return}var d=c[0].geometry.getBounds();for(var b=0;b<c.length;b++){if(c[b].attributes._isSourceNode){c[b].style=mapfish.Routing.firstPointStyle}else{if(c[b].attributes._isTargetNode){c[b].style=mapfish.Routing.lastPointStyle}else{d.extend(c[b].geometry.getBounds());c[b].style=mapfish.Routing.routeStyle}}}this.vector.addFeatures(c);if(!this.map.getExtent().containsBounds(d)){this.map.zoomToExtent(d)}},onFailure:function(a){OpenLayers.Console.error("Failed to fetch routing data: "+a)},fetchRoute:function(a){new OpenLayers.Ajax.Request(this.url,{method:"get",parameters:a,onSuccess:OpenLayers.Function.bind(this.onSuccess,this),onFailure:OpenLayers.Function.bind(this.onFailure,this)})}});mapfish.Routing.routeStyle={strokeColor:"blue",strokeWidth:6,strokeOpacity:0.4};OpenLayers.Util.applyDefaults(mapfish.Routing.routeStyle,OpenLayers.Feature.Vector.style["default"]);mapfish.Routing.firstPointStyle={externalGraphic:mapfish._getScriptLocation()+"img/routing-start-node.png",graphicWidth:18,graphicHeight:26,graphicYOffset:-26,fillOpacity:1,cursor:"pointer"};OpenLayers.Util.applyDefaults(mapfish.Routing.firstPointStyle,OpenLayers.Feature.Vector.style["default"]);mapfish.Routing.lastPointStyle={externalGraphic:mapfish._getScriptLocation()+"img/routing-stop-node.png",graphicWidth:18,graphicHeight:26,graphicYOffset:-26,fillOpacity:1,cursor:"pointer"};OpenLayers.Util.applyDefaults(mapfish.Routing.lastPointStyle,OpenLayers.Feature.Vector.style["default"]);mapfish.GeoStat.Choropleth=OpenLayers.Class(mapfish.GeoStat,{colors:[new mapfish.ColorRgb(120,120,0),new mapfish.ColorRgb(255,0,0)],method:mapfish.GeoStat.Distribution.CLASSIFY_BY_QUANTILS,numClasses:5,defaultSymbolizer:{fillOpacity:1},classification:null,colorInterpolation:null,initialize:function(b,a){mapfish.GeoStat.prototype.initialize.apply(this,arguments)},updateOptions:function(b){var a=OpenLayers.Util.extend({},this.options);this.addOptions(b);if(b){if(b.method!=a.method||b.indicator!=a.indicator||b.numClasses!=a.numClasses){this.setClassification()}else{if(b.colors&&(!b.colors[0].equals(a.colors[0])||!b.colors[1].equals(a.colors[1]))){this.createColorInterpolation()}}}},createColorInterpolation:function(){var b=this.colors;var a=this.classification.bins.length;this.colorInterpolation=mapfish.ColorRgb.getColorsArrayByRgbInterpolation(b[0],b[1],a)},setClassification:function(){var b=[];var d=this.layer.features;for(var c=0;c<d.length;c++){b.push(d[c].attributes[this.indicator])}var a={labelGenerator:this.options.labelGenerator};var e=new mapfish.GeoStat.Distribution(b,a);this.classification=e.classify(this.method,this.numClasses,null);this.createColorInterpolation()},applyClassification:function(a){this.updateOptions(a);var d=this.classification.getBoundsArray();var e=new Array(d.length-1);for(var b=0;b<d.length-1;b++){var c=new OpenLayers.Rule({symbolizer:{fillColor:this.colorInterpolation[b].toHexString()},filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.BETWEEN,property:this.indicator,lowerBoundary:d[b],upperBoundary:d[b+1]})});e[b]=c}this.extendStyle(e);mapfish.GeoStat.prototype.applyClassification.apply(this,arguments)},updateLegend:function(){if(!this.legendDiv){return}this.legendDiv.update("");for(var b=0;b<this.classification.bins.length;b++){var a=document.createElement("div");a.style.backgroundColor=this.colorInterpolation[b].toHexString();a.style.width="30px";a.style.height="15px";a.style.cssFloat="left";a.style.marginRight="10px";this.legendDiv.appendChild(a);a=document.createElement("div");a.innerHTML=this.classification.bins[b].label;this.legendDiv.appendChild(a);a=document.createElement("div");a.style.clear="left";this.legendDiv.appendChild(a)}},CLASS_NAME:"mapfish.GeoStat.Choropleth"});mapfish.GeoStat.ProportionalSymbol=OpenLayers.Class(mapfish.GeoStat,{minSize:2,maxSize:20,minVal:null,maxVal:null,initialize:function(b,a){mapfish.GeoStat.prototype.initialize.apply(this,arguments)},updateOptions:function(b){var a=OpenLayers.Util.extend({},this.options);this.addOptions(b);if(b&&b.indicator!=a.indicator){this.setClassification()}},setClassification:function(){var a=[];var c=this.layer.features;for(var b=0;b<c.length;b++){a.push(c[b].attributes[this.indicator])}var d=new mapfish.GeoStat.Distribution(a);this.minVal=d.minVal;this.maxVal=d.maxVal},applyClassification:function(a){if(a&&a.resetClassification){this.setClassification()}var b=OpenLayers.Function.bind(function(d){var e=d.attributes[this.indicator];var c=(e-this.minVal)/(this.maxVal-this.minVal)*(this.maxSize-this.minSize)+this.minSize;return c},this);this.extendStyle(null,{pointRadius:"${calculateRadius}"},{calculateRadius:b});mapfish.GeoStat.prototype.applyClassification.apply(this,arguments)},updateLegend:function(){if(!this.legendDiv){return}this.legendDiv.innerHTML="Needs to be done !"},CLASS_NAME:"mapfish.GeoStat.ProportionalSymbol"});Ext.namespace("mapfish.widgets","mapfish.widgets.editing");mapfish.widgets.editing.FeatureEditingPanel=Ext.extend(Ext.Panel,{COMBO_NONE_VALUE:"__combo_none_value__",COMBO_NONE_NAME:OpenLayers.i18n("mf.editing.comboNoneName"),map:null,layerConfig:null,combo:null,comboConfig:null,form:null,store:null,layerStoreMediator:null,grid:null,menu:null,layer:null,currentLayerId:null,modifyFeatureControl:null,drawFeatureControl:null,importBtn:null,commitBtn:null,deleteBtn:null,attributesFormDefaults:null,initComponent:function(){if(!this.map){OpenLayers.Console.error("map option for FeatureEditingPanel missing")}if(!this.layerConfig){OpenLayers.Console.error("layerConfig option for FeatureEditingPanel missing")}this.layout="form";this.tbar=this.createToolbar();mapfish.widgets.editing.FeatureEditingPanel.superclass.initComponent.apply(this);this.add(this.createLayerCombo());this.on("destroy",this.destroyResources,this);this.on("enable",this.setUp,this);this.on("disable",this.tearDown,this);this.on("expand",this.setUp,this);this.on("collapse",this.tearDown,this);this.on("activate",this.setUp,this);this.on("deactivate",this.tearDown,this);this.addEvents("beforecommit","commit")},createToolbar:function(){this.importBtn=new Ext.Button({text:OpenLayers.i18n("mf.editing.import"),tooltip:OpenLayers.i18n("mf.editing.importTooltip"),disabled:true,handler:function(){this.refreshFeatures()},scope:this});this.commitBtn=new Ext.Button({text:OpenLayers.i18n("mf.editing.commit"),tooltip:OpenLayers.i18n("mf.editing.commitTooltip"),disabled:true,handler:function(){this.commitFeatures()},scope:this});this.deleteBtn=new Ext.Button({text:OpenLayers.i18n("mf.editing.delete"),tooltip:OpenLayers.i18n("mf.editing.deleteTooltip"),disabled:true,handler:function(){this.deleteFeatures()},scope:this});var a=[this.importBtn,this.commitBtn,"-",this.deleteBtn];return new mapfish.widgets.toolbar.Toolbar({items:a,map:this.map})},refreshFeatures:function(){this.layer.strategies[0].update({force:true})},commitFeatures:function(){function b(d){if(this.modifyFeatureControl.feature){this.modifyFeatureControl.unselectFeature({feature:this.modifyFeatureControl.feature})}var c=(d.reqFeatures instanceof Array)?d.reqFeatures:[d.reqFeatures];this.layer.destroyFeatures(c);this.layer.addFeatures(d.features);if(d.last){this.fireEvent("commit")}}function a(d){var c=d.reqFeatures;if(!(c instanceof Array)){c=[c]}this.layer.destroyFeatures(c);if(d.last){this.fireEvent("commit")}}this.fireEvent("beforecommit");this.layer.protocol.commit(this.layer.features,{create:{scope:this,callback:b},update:{scope:this,callback:b},"delete":{scope:this,callback:a}})},deleteFeatures:function(){var b;for(var a=this.layer.selectedFeatures.length-1;a>=0;a--){b=this.layer.selectedFeatures[a];if(this.modifyFeatureControl.feature==b){this.modifyFeatureControl.selectControl.unselect(b)}if(b.state==OpenLayers.State.INSERT){this.layer.destroyFeatures([b])}else{b.state=OpenLayers.State.DELETE;this.layerStoreMediator.featureStoreMediator.addFeatures(b);this.layer.drawFeature(b)}}},createLayerCombo:function(){var d=[[this.COMBO_NONE_VALUE,this.COMBO_NONE_NAME]];for(var b in this.layerConfig){d.push([b,this.layerConfig[b].text])}var a=new Ext.data.SimpleStore({fields:["value","text"],data:d});var c=OpenLayers.Util.applyDefaults({fieldLabel:OpenLayers.i18n("mf.editing.comboLabel"),name:"editingLayer",hiddenName:"editingLayer",displayField:"text",valueField:"value",mode:"local",triggerAction:"all",editable:false,store:a,listeners:{select:function(g,e,f){this.prepareSwitchLayer(e.data.value)},scope:this}},this.comboConfig);this.combo=new Ext.form.ComboBox(c);return this.combo},prepareSwitchLayer:function(a){if(this.isDirty()){Ext.Msg.confirm(OpenLayers.i18n("mf.editing.confirmMessageTitle"),OpenLayers.i18n("mf.editing.confirmMessage"),function(b,c){if(b=="yes"){this.switchLayer(a)}else{this.combo.setValue(this.currentLayerId)}},this)}else{this.switchLayer(a)}},switchLayer:function(b){if(b!=this.COMBO_NONE_VALUE){var a=this.layerConfig[b];this.configureLayer(a);this.createStore(a);this.createModifyFeatureControl();this.createDrawFeatureControl(a);this.createLayerStoreMediator();this.importBtn.enable();this.createForm(a);this.createGrid(a)}else{this.destroyAllResources()}this.currentLayerId=b},configureLayer:function(a){var b=this.layer;if(!b){b=this.layer=this.createLayer()}a.protocol.autoDestroy=false;b.protocol=a.protocol;if(OpenLayers.Util.indexOf(this.map.layers,b)<0){this.map.addLayer(b)}b.destroyFeatures()},createLayer:function(){var a=new OpenLayers.Layer.Vector(OpenLayers.Util.createUniqueID("mf.ediding"),{strategies:[this.createStrategy()],styleMap:this.createStyleMap(),displayInLayerSwitcher:false});a.events.register("featureselected",this,this.onFeatureselected);a.events.register("featureunselected",this,this.onFeatureunselected);a.events.register("featureremoved",this,this.onFeatureremoved);a.events.register("featuremodified",this,this.onFeaturemodified);return a},destroyLayer:function(){var a=this.layer;if(a){a.destroy();this.layer=null}},createStyleMap:function(){var c=new OpenLayers.StyleMap();var a=function(d){return{state:d.state||OpenLayers.State.UNKNOWN}};var b={};b[OpenLayers.State.UNKNOWN]={};b[OpenLayers.State.UPDATE]={fillColor:"green",strokeColor:"green"};b[OpenLayers.State.DELETE]={fillColor:"red",strokeColor:"red",fillOpacity:0.2,strokeOpacity:0.3,display:""};b[OpenLayers.State.INSERT]={fillColor:"green",strokeColor:"green"};c.addUniqueValueRules("default","state",b,a);c.addUniqueValueRules("delete","state",b,a);return c},createStrategy:function(){return new OpenLayers.Strategy.BBOX({autoActivate:false})},onFeatureselected:function(b){var a=b.feature;this.deleteBtn.enable();this.selectInGrid(a);this.editAttributes(a)},onFeatureunselected:function(a){this.deleteBtn.disable();this.unselectInGrid();this.form.getForm().reset();this.form.setDisabled(true)},createStore:function(c){this.destroyStore();var a=[];var e=c.featuretypes.properties;for(var d=0;d<e.length;d++){a.push(e[d].getRecordType())}var b=new Ext.data.GroupingStore({reader:new mapfish.widgets.data.FeatureReader({},a),groupField:"state"});b.on("add",this.updateCommitBtnState,this);b.on("remove",this.updateCommitBtnState,this);b.on("clear",this.updateCommitBtnState,this);b.on("load",this.updateGridSelection,this);this.store=b},destroyStore:function(){var a=this.store;if(a){a.destroy();this.store=null}},updateCommitBtnState:function(a){this.commitBtn.setDisabled(!(a.getCount()>0))},updateGridSelection:function(b,a,c){for(var e=0;e<a.length;e++){var d=a[e].data.feature;if(OpenLayers.Util.indexOf(this.layer.selectedFeatures,d)>=0){this.selectInGrid(d)}}},createModifyFeatureControl:function(){this.destroyModifyFeatureControl();var a=new OpenLayers.Control.ModifyFeature(this.layer,{mode:OpenLayers.Control.ModifyFeature.RESHAPE|OpenLayers.Control.ModifyFeature.DRAG,title:OpenLayers.i18n("mf.editing.selectModifyFeature")});this.getTopToolbar().addControl(a,{iconCls:"modifyfeature",toggleGroup:this.getId()+"map"});a.activate();this.modifyFeatureControl=a},destroyModifyFeatureControl:function(){var a=this.modifyFeatureControl;if(a){this.getTopToolbar().removeControl(a);a.destroy();this.modifyFeatureControl=null}},onFeatureremoved:function(a){if(this.modifyFeatureControl&&a.feature==this.modifyFeatureControl.feature){this.modifyFeatureControl.feature=null}},onFeaturemodified:function(b){var a=b.feature;if(a.state!=OpenLayers.State.INSERT){a.state=OpenLayers.State.UPDATE}},createDrawFeatureControl:function(a){this.destroyDrawFeatureControl();var f,c,e=false,b;switch(a.featuretypes.geometry.type){case OpenLayers.Geometry.MultiPoint:e=true;case OpenLayers.Geometry.Point:f=OpenLayers.i18n("mf.editing.drawPointTitle");c=OpenLayers.Handler.Point;b="drawpoint";break;case OpenLayers.Geometry.MultiPolygon:e=true;case OpenLayers.Geometry.Polygon:f=OpenLayers.i18n("mf.editing.drawPolygonTitle");c=OpenLayers.Handler.Polygon;b="drawpolygon";break;case OpenLayers.Geometry.MultiLineString:e=true;case OpenLayers.Geometry.LineString:f=OpenLayers.i18n("mf.editing.drawLineTitle");c=OpenLayers.Handler.Path;b="drawline";break}var d=new OpenLayers.Control.DrawFeature(this.layer,c,{title:f,featureAdded:OpenLayers.Function.bind(this.onFeatureadded,this),handlerOptions:{multi:e}});this.getTopToolbar().addControl(d,{iconCls:b,toggleGroup:this.getId()+"map"});this.drawFeatureControl=d},destroyDrawFeatureControl:function(){var a=this.drawFeatureControl;if(a){this.getTopToolbar().removeControl(a);a.destroy();this.drawFeatureControl=null}},onFeatureadded:function(a){a.state=OpenLayers.State.INSERT;this.layer.events.triggerEvent("featuresadded",{features:[a]});this.modifyFeatureControl.selectControl.select(a);this.form.getForm().loadRecord(this.attributesFormDefaults);this.modifyFeatureControl.activate()},createLayerStoreMediator:function(){this.destroyLayerStoreMediator();var a=new mapfish.widgets.data.LayerStoreMediator({store:this.store,layer:this.layer,filter:function(b){return b.state!=null&&b.state!=OpenLayers.State.UNKNOWN}});a.activate();this.layerStoreMediator=a},destroyLayerStoreMediator:function(){var a=this.layerStoreMediator;if(a){a.deactivate();this.layerStoreMediator=null}},destroyAllResources:function(){this.destroyResources();this.destroyForm();this.destroyGrid()},destroyResources:function(){this.destroyStore();this.destroyModifyFeatureControl();this.destroyDrawFeatureControl();this.destroyLayerStoreMediator();this.destroyLayer()},setUp:function(){if(this.layer&&this.currentLayerId!=this.COMBO_NONE_VALUE){this.map.addLayer(this.layer)}if(this.modifyFeatureControl){this.modifyFeatureControl.activate()}},tearDown:function(){if(this.modifyFeatureControl){this.modifyFeatureControl.deactivate()}if(this.drawFeatureControl){this.drawFeatureControl.deactivate()}var a=this.layer;if(a&&OpenLayers.Util.indexOf(this.map.layers,a)>=0){this.map.removeLayer(a)}},createForm:function(b){if(!b.featuretypes){OpenLayers.Console.error("no featuretypes exist for the given layer");return}var e=this.form;if(!e){var e=new Ext.FormPanel({title:OpenLayers.i18n("mf.editing.formTitle"),disabled:true,items:[{}],trackResetOnLoad:true,bodyStyle:"padding: 5px",buttons:[{text:"ok",handler:function(){if(!this.currentlyEditedFeature||!this.form.getForm().isDirty()){return}this.updateFeatureAttributes(this.currentlyEditedFeature)},scope:this}]});this.add(e);this.form=e;this.doLayout()}var a=this.form.items.items;for(var d=a.length-1;d>=0;--d){var h=a[d];e.getForm().remove(h);e.remove(h)}var c=b.featuretypes.properties;var g={};for(d=0;d<c.length;d++){var f=c[d];e.add(f.getExtField());g[f.name]=f.defaultValue}e.doLayout();this.attributesFormDefaults=new Ext.data.Record(g);e.getForm().loadRecord(this.attributesFormDefaults)},destroyForm:function(){var a=this.form;if(a){a.destroy();this.form=null}},updateFeatureAttributes:function(c){var d,e,b,a=this.form.items.items;for(b=0;b<a.length;b++){d=a[b];if(!d.getValue){continue}if(d.isDirty&&d.isDirty()){e=d.getValue();c.attributes[d.name]=e;c.data[d.name]=e}}if(c.state!=OpenLayers.State.INSERT){c.state=OpenLayers.State.UPDATE}var f=this.layerStoreMediator.featureStoreMediator;f.addFeatures([c])},createGrid:function(a){var c=this.grid;if(c){this.destroyGrid()}if(!a.featuretypes){OpenLayers.Console.error("no featuretypes exist for the given layer");return}if(!a.featuretypes.properties){OpenLayers.Console.error("no featuretypes properties are given for layer");return}var b=[{header:OpenLayers.i18n("mf.editing.gridIdHeader"),dataIndex:"fid"}];Ext.each(a.featuretypes.properties,function(d){if(d.showInGrid){b.push({header:d.label||d.name,dataIndex:d.name})}});b.push({header:OpenLayers.i18n("mf.editing.gridStateHeader"),dataIndex:"state"});c=new Ext.grid.GridPanel({title:OpenLayers.i18n("mf.editing.gridTitle"),height:200,store:this.store,view:new Ext.grid.GroupingView({groupTextTpl:'{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Features" : "Feature"]})'}),columns:b});c.on("rowcontextmenu",this.onContextClick,this);this.add(c);this.doLayout();this.grid=c},destroyGrid:function(){if(this.grid){this.grid.destroy();this.grid=null}},selectInGrid:function(c){if(this.store&&this.grid){var b=this.store.findBy(function(d,e){return d.get("feature")==c});var a=this.store.getAt(b);this.grid.getSelectionModel().selectRecords([a]);if(b!=-1){this.grid.getView().focusRow(b)}}},unselectInGrid:function(){if(this.grid){this.grid.getSelectionModel().clearSelections()}},editAttributes:function(b){this.currentlyEditedFeature=b;this.form.getForm().reset();var c=this.store.reader.readRecords([b]);var a=c.records[0];this.form.getForm().loadRecord(a);this.form.enable()},onContextClick:function(b,a,c){var d=this.menu;if(!d){d=new Ext.menu.Menu({id:"grid-ctx",items:[{text:OpenLayers.i18n("mf.editing.onContextClickMessage"),scope:this,handler:function(){this.modifyFeatureControl.selectControl.unselectAll();var e=this.ctxRecord.data.feature;this.modifyFeatureControl.selectControl.select(e);this.modifyFeatureControl.activate()}}]});d.on("hide",this.onContextHide,this);this.menu=d}c.stopEvent();if(this.ctxRow){Ext.fly(this.ctxRow).removeClass("x-node-ctx");this.ctxRow=null}this.ctxRow=b.view.getRow(a);this.ctxRecord=b.store.getAt(a);Ext.fly(this.ctxRow).addClass("x-node-ctx");d.showAt(c.getXY())},onContextHide:function(){if(this.ctxRow){Ext.fly(this.ctxRow).removeClass("x-node-ctx");this.ctxRow=null}},isDirty:function(){return(this.store&&this.store.getCount()>0)},setWindowOnbeforeunload:function(){window.onbeforeunload=OpenLayers.Function.bind(function(a){if(this.isDirty()){return OpenLayers.i18n("mf.editing.onBeforeUnloadMessage")}},this)}});Ext.reg("featureediting",mapfish.widgets.editing.FeatureEditingPanel);Ext.namespace("mapfish.widgets","mapfish.widgets.geostat");mapfish.widgets.geostat.Choropleth=Ext.extend(Ext.FormPanel,{layer:null,format:null,url:null,featureSelection:true,nameAttribute:null,indicator:null,indicatorText:null,coreComp:null,classificationApplied:false,ready:false,border:false,loadMask:false,labelGenerator:null,initComponent:function(){this.items=[{xtype:"combo",fieldLabel:"Indicator",name:"indicator",editable:false,valueField:"value",displayField:"text",mode:"local",emptyText:"Select an indicator",triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value","text"],data:this.indicators}),listeners:{select:{fn:function(){this.classify(false)},scope:this}}},{xtype:"combo",fieldLabel:"Method",name:"method",hiddenName:"method",editable:false,valueField:"value",displayField:"text",mode:"local",emptyText:"Select a method",triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value","text"],data:[["CLASSIFY_BY_EQUAL_INTERVALS","Equal Intervals"],["CLASSIFY_BY_QUANTILS","Quantils"]]}),listeners:{select:{fn:function(){this.classify(false)},scope:this}}},{xtype:"combo",fieldLabel:"Number of classes",name:"numClasses",editable:false,valueField:"value",displayField:"value",mode:"local",value:5,triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value"],data:[[0],[1],[2],[3],[4],[5],[6],[7],[8],[9]]}),listeners:{select:{fn:function(){this.classify(false)},scope:this}}},{xtype:"colorfield",fieldLabel:"Color",name:"colorA",width:100,allowBlank:false,value:"#FFFF00",listeners:{valid:{fn:function(){this.classify(false)},scope:this}}},{xtype:"colorfield",fieldLabel:"Color",name:"colorB",width:100,allowBlank:false,value:"#FF0000",listeners:{valid:{fn:function(){this.classify(false)},scope:this}}}];mapfish.widgets.geostat.Choropleth.superclass.initComponent.apply(this)},requestSuccess:function(a){this.ready=true;if(this.loadMask&&this.rendered){this.loadMask.hide()}},requestFailure:function(a){OpenLayers.Console.error("Ajax request failed")},getColors:function(){var b=new mapfish.ColorRgb();b.setFromHex(this.form.findField("colorA").getValue());var a=new mapfish.ColorRgb();a.setFromHex(this.form.findField("colorB").getValue());return[b,a]},classify:function(b){if(!this.ready){if(b){Ext.MessageBox.alert("Error","Component init not complete")}return}var a={};this.indicator=this.form.findField("indicator").getValue();this.indicatorText=this.form.findField("indicator").getRawValue();a.indicator=this.indicator;if(!a.indicator){if(b){Ext.MessageBox.alert("Error","You must choose an indicator")}return}a.method=this.form.findField("method").getValue();if(!a.method){if(b){Ext.MessageBox.alert("Error","You must choose a method")}return}a.method=mapfish.GeoStat.Distribution[a.method];a.numClasses=this.form.findField("numClasses").getValue();a.colors=this.getColors();this.coreComp.updateOptions(a);this.coreComp.applyClassification();this.classificationApplied=true},onRender:function(b,a){mapfish.widgets.geostat.Choropleth.superclass.onRender.apply(this,arguments);if(this.loadMask){this.loadMask=new Ext.LoadMask(this.bwrap,this.loadMask);this.loadMask.show()}var c={layer:this.layer,format:this.format,url:this.url,requestSuccess:this.requestSuccess.createDelegate(this),requestFailure:this.requestFailure.createDelegate(this),featureSelection:this.featureSelection,nameAttribute:this.nameAttribute,legendDiv:this.legendDiv,labelGenerator:this.labelGenerator};this.coreComp=new mapfish.GeoStat.Choropleth(this.map,c)}});Ext.reg("choropleth",mapfish.widgets.geostat.Choropleth);Ext.namespace("mapfish.widgets","mapfish.widgets.geostat");mapfish.widgets.geostat.ProportionalSymbol=Ext.extend(Ext.FormPanel,{layer:null,format:null,url:null,featureSelection:true,nameAttribute:null,indicator:null,indicatorText:null,coreComp:null,classificationApplied:false,ready:false,border:false,loadMask:false,initComponent:function(){this.items=[{xtype:"combo",fieldLabel:"Indicator",name:"indicator",editable:false,valueField:"value",displayField:"text",mode:"local",emptyText:"select an indicator",triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value","text"],data:this.indicators})},{xtype:"numberfield",fieldLabel:"Min Size",name:"minSize",width:30,value:2,maxValue:20},{xtype:"numberfield",fieldLabel:"Max Size",name:"maxSize",width:30,value:20,maxValue:50}];this.buttons=[{text:"OK",handler:this.classify,scope:this}];mapfish.widgets.geostat.ProportionalSymbol.superclass.initComponent.apply(this)},requestSuccess:function(a){this.ready=true;if(this.loadMask&&this.rendered){this.loadMask.hide()}},requestFailure:function(a){OpenLayers.Console.error("Ajax request failed")},classify:function(){if(!this.ready){if(exception){Ext.MessageBox.alert("Error","Component init not complete")}return}this.indicator=this.form.findField("indicator").getValue();this.indicatorText=this.form.findField("indicator").getRawValue();if(!this.indicator){Ext.MessageBox.alert("Error","You must choose an indicator");return}var a=this.form.findField("minSize").getValue();var b=this.form.findField("maxSize").getValue();this.coreComp.updateOptions({indicator:this.indicator,minSize:a,maxSize:b});this.coreComp.applyClassification();this.classificationApplied=true},onRender:function(b,a){mapfish.widgets.geostat.Choropleth.superclass.onRender.apply(this,arguments);if(this.loadMask){this.loadMask=new Ext.LoadMask(this.bwrap,this.loadMask);this.loadMask.show()}this.coreComp=new mapfish.GeoStat.ProportionalSymbol(this.map,{layer:this.layer,format:this.format,url:this.url,requestSuccess:this.requestSuccess.createDelegate(this),requestFailure:this.requestFailure.createDelegate(this),featureSelection:this.featureSelection,nameAttribute:this.nameAttribute})}});Ext.reg("proportionalsymbol",mapfish.widgets.geostat.ProportionalSymbol);