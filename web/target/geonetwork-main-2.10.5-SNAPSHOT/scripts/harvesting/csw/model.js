csw.Model=function(l){HarvesterModel.call(this);var j=l;var e=null;var f=null;this.retrieveImportXslts=g;this.retrieveGroups=h;this.retrieveCategories=k;this.retrieveIcons=c;this.getUpdateRequest=d;function h(m){new InfoService(j,"groupsIncludingSystemGroups",m)}function k(m){new InfoService(j,"categories",m)}function c(n){e=n;var m=ker.createRequest("type","icons");ker.send("xml.harvesting.info",m,ker.wrap(this,i))}function i(m){if(m.nodeName=="error"){ker.showError(j.getText("cannotRetrieve"),m)}else{var p=[];var o=xml.children(xml.children(m)[0]);for(var n=0;n<o.length;n++){p.push(xml.textContent(o[n]))}e(p)}}function g(n){f=n;var m=ker.createRequest("type","importStylesheets");ker.send("xml.harvesting.info",m,ker.wrap(this,b))}function b(m){if(m.nodeName=="error"){ker.showError(j.getText("cannotRetrieve"),m)}else{var p=[];var o=xml.children(xml.children(m)[0]);for(var n=0;n<o.length;n++){p.push(xml.toObject(o[n]))}f(p)}}function d(p){var n=str.substitute(a,p);var o=p.SEARCH_LIST;var q="";for(var m=0;m<o.length;m++){q+=str.substitute(p.SEARCH_TEMP,o[m])}n=str.replace(n,"{SEARCH_LIST}",q);return this.substituteCommon(p,n)}var a=' <node id="{ID}" type="{TYPE}">    <ownerGroup><id>{OWNERGROUP}</id></ownerGroup>    <site>      <name>{NAME}</name>      <capabilitiesUrl>{CAPAB_URL}</capabilitiesUrl>      <icon>{ICON}</icon>      <account>        <use>{USE_ACCOUNT}</use>        <username>{USERNAME}</username>        <password>{PASSWORD}</password>      </account>      <rejectDuplicateResource>{REJECTDUPLICATERESOURCE}</rejectDuplicateResource>    </site>    <options>      <oneRunOnly>{ONE_RUN_ONLY}</oneRunOnly>      <every>{EVERY}</every>    </options>    <content>      <validate>{VALIDATE}</validate>      <importxslt>{IMPORTXSLT}</importxslt>    </content>    <searches>       {SEARCH_LIST}    </searches>    <privileges>       {PRIVIL_LIST}    </privileges>    <categories>       {CATEG_LIST}    </categories>  </node>'};