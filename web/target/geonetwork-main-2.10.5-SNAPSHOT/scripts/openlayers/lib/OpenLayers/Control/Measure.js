OpenLayers.Control.Measure=OpenLayers.Class(OpenLayers.Control,{EVENT_TYPES:["measure","measurepartial"],handlerOptions:null,callbacks:null,displaySystem:"metric",geodesic:false,displaySystemUnits:{geographic:["dd"],english:["mi","ft","in"],metric:["km","m"]},partialDelay:300,delayedTrigger:null,persist:false,initialize:function(b,a){this.EVENT_TYPES=OpenLayers.Control.Measure.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);OpenLayers.Control.prototype.initialize.apply(this,[a]);this.callbacks=OpenLayers.Util.extend({done:this.measureComplete,point:this.measurePartial},this.callbacks);this.handlerOptions=OpenLayers.Util.extend({persist:this.persist},this.handlerOptions);this.handler=new b(this,this.callbacks,this.handlerOptions)},cancel:function(){this.handler.cancel()},updateHandler:function(b,a){var c=this.active;if(c){this.deactivate()}this.handler=new b(this,this.callbacks,a);if(c){this.activate()}},measureComplete:function(a){if(this.delayedTrigger){window.clearTimeout(this.delayedTrigger)}this.measure(a,"measure")},measurePartial:function(a,b){if(b.getLength()>0){b=b.clone();this.delayedTrigger=window.setTimeout(OpenLayers.Function.bind(function(){this.measure(b,"measurepartial")},this),this.partialDelay)}},measure:function(d,b){var c,a;if(d.CLASS_NAME.indexOf("LineString")>-1){c=this.getBestLength(d);a=1}else{c=this.getBestArea(d);a=2}this.events.triggerEvent(b,{measure:c[0],units:c[1],order:a,geometry:d})},getBestArea:function(f){var b=this.displaySystemUnits[this.displaySystem];var e,d;for(var c=0,a=b.length;c<a;++c){e=b[c];d=this.getArea(f,e);if(d>1){break}}return[d,e]},getArea:function(f,a){var b,c;if(this.geodesic){b=f.getGeodesicArea(this.map.getProjectionObject());c="m"}else{b=f.getArea();c=this.map.getUnits()}var e=OpenLayers.INCHES_PER_UNIT[a];if(e){var d=OpenLayers.INCHES_PER_UNIT[c];b*=Math.pow((d/e),2)}return b},getBestLength:function(f){var b=this.displaySystemUnits[this.displaySystem];var e,d;for(var c=0,a=b.length;c<a;++c){e=b[c];d=this.getLength(f,e);if(d>1){break}}return[d,e]},getLength:function(f,a){var b,c;if(this.geodesic){b=f.getGeodesicLength(this.map.getProjectionObject());c="m"}else{b=f.getLength();c=this.map.getUnits()}var e=OpenLayers.INCHES_PER_UNIT[a];if(e){var d=OpenLayers.INCHES_PER_UNIT[c];b*=(d/e)}return b},CLASS_NAME:"OpenLayers.Control.Measure"});