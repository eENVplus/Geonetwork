Ext.namespace("app");app.FeatureSelectionPanel=Ext.extend(Ext.Panel,{border:false,mappanel:null,serviceUrl:null,featureTypes:null,overlayLayer:null,featureTypeStore:new Ext.data.JsonStore({root:"featureTypes",fields:["name","title"]}),eventProtocol:null,wfsProtocol:null,mapSearcher:null,searchCombo:null,popup:null,popupCounterTpl:new Ext.XTemplate("{index} sur {total}"),statusbar:null,defaults:{border:false},initComponent:function(){this.layout="border";this.items=[this.createMapPanel(),this.createForm()];this.addEvents("featureselected");this.bbar=this.statusbar=new Ext.StatusBar({});app.FeatureSelectionPanel.superclass.initComponent.call(this);this.getFeatureTypes()},createMap:function(){this.map=new OpenLayers.Map(null,options);this.map.addLayers([metacarta,this.overlayLayer])},createMapPanel:function(){var c=new OpenLayers.Layer.WMS("Blue Marble","http://sigma.openplans.org/geoserver/wms?",{layers:"bluemarble"});this.overlayLayer=new OpenLayers.Layer.WMS("overlay",this.serviceUrl,{layers:[],transparent:true},{singleTile:true,ratio:1.5});var b={allOverlays:false};var a={xtype:"gx_mappanel",id:"mappanel_"+this.id,region:"center",map:b,layers:[c,this.overlayLayer],listeners:{render:function(d){this.mappanel=d},scope:this}};return a},getFeatureTypes:function(){var b=function(d){var f=new OpenLayers.Format.WFSCapabilities();var c=f.read(d.responseText);var e=c.featureTypeList;this.featureTypeStore.loadData(e)};var a=function(c){};Ext.Ajax.request({url:this.serviceUrl,success:b,failure:a,method:"GET",params:{service:"WFS",request:"getCapabilities"},scope:this})},createForm:function(){this.featureTypesCombo=new Ext.form.ComboBox({fieldLabel:"Sélectionnez une couche",store:this.featureTypeStore,valueField:"name",displayField:"title",mode:"local",triggerAction:"all",editable:false,anchor:"100%",listeners:{select:function(c,a){var b=a.get("name");this.createProtocol(b);this.setMapSearcher(b);this.setSearchComboConfig(b);this.searchCombo.enable();this.overlayLayer.params.LAYERS=b;this.overlayLayer.redraw(true)},scope:this}});this.createSearchCombo();return{xtype:"form",region:"east",width:200,labelAlign:"top",bodyStyle:"padding:4px;",items:[this.featureTypesCombo,this.searchCombo]}},createProtocol:function(a){if(this.eventProtocol){return this.eventProtocol}this.wfsProtocol=new OpenLayers.Protocol.WFS({url:this.serviceUrl,featureType:a,featurePrefix:"ms",srsName:this.mappanel.map.getProjectionObject().getCode(),version:"1.1.0"});this.eventProtocol=new mapfish.Protocol.TriggerEventDecorator({protocol:this.wfsProtocol});this.eventProtocol.events.on({crudtriggered:function(){if(this.popup){this.popup.close()}this.statusbar.showBusy();this.statusbar.setStatus({text:"Recherche"})},scope:this})},createSearchCombo:function(){this.searchCombo=new Ext.form.ComboBox({mode:"remote",minChars:2,typeAhead:true,forceSelection:true,hideTrigger:true,displayField:"nom",fieldLabel:"Saisissez un nom ci-dessous ou cliquez sur la carte pour sélectionner une entité",anchor:"100%",disabled:true,listeners:{select:function(c,a,b){this.displayPopup([a.data.feature])},scope:this}})},setSearchComboConfig:function(b){var a=new GeoExt.data.FeatureStore({fields:["nom"],proxy:new GeoExt.data.ProtocolProxy({protocol:this.wfsProtocol})});a.on({beforeload:function(c,d){d.filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:"nom",value:"*"+this.searchCombo.getValue()+"*"});delete c.baseParams.query},scope:this});this.searchCombo.bindStore(null);this.searchCombo.bindStore(a,true)},setMapSearcher:function(a){if(!this.mapSearcher){this.mapSearcher=new mapfish.Searcher.Map({mode:mapfish.Searcher.Map.CLICK,protocol:this.eventProtocol,displayDefaultPopup:true,displayPopup:OpenLayers.Function.bind(function(b){var c=b.features;this.displayPopup(c)},this),searchTolerance:5,pointAsBBOX:true});this.mappanel.map.addControl(this.mapSearcher);this.mapSearcher.activate()}else{this.wfsProtocol.format.featureType=a;this.wfsProtocol.options.featureType=a}},displayPopup:function(c){this.statusbar.clearStatus();if(c&&c.length>0){var j=c.length;var l=[];for(var f=0;f<j;f++){var p=c[f];if(!p.fid){OpenLayers.Console.error("no fid provided for the feature");continue}var e=p.fid.split(".")[0];var n=this.featureTypeStore;var m=n.getAt(n.find("name",e)).get("title");var h='<h3 class="popup_title">'+m+"</h3>";for(var d in p.attributes){if(d!="boundedBy"&&d!="msGeometry"){h+="<div><b>"+d.toUpperCase()+" : </b>{"+d+"}</div>"}}var g=new Ext.Template(h);var o=function(i){this.fireEvent("featureselected",this,i)};l.push({id:"popup-card-"+f,border:false,bodyStyle:"padding:0.5em",html:g.apply(p.data),buttons:[{text:translate("selectFeature"),handler:o.createDelegate(this,[p])}]})}var b=false;var a=new Ext.Toolbar.TextItem(['<span id="',this.getId()+"_popup_counter",'">',this.popupCounterTpl.apply({index:1,total:j}),"</span>"].join(""));if(j>1){var b=["->",a,{id:this.getId()+"_popup_move_prev",iconCls:"x-tbar-page-prev",handler:this.popupNavHandler.createDelegate(this,[-1,j]),disabled:true,listeners:{click:function(i,k){k.stopEvent()}}},{id:this.getId()+"_popup_move_next",iconCls:"x-tbar-page-next",handler:this.popupNavHandler.createDelegate(this,[1,j]),listeners:{click:function(i,k){k.stopEvent()}}}]}this.popup=new GeoExt.Popup({feature:c[0],closable:true,header:false,unpinnable:false,border:false,width:230,layout:"card",activeItem:0,items:l,bbar:b,resizable:false});this.mappanel.add(this.popup);Ext.EventManager.on(this.popup.getEl(),"click",function(i){i.stopEvent()});Ext.EventManager.on(this.popup.getEl(),"dblclick",function(i){i.stopEvent()});Ext.getDoc().on("mousedown",this.closePopupIf,this)}else{this.statusbar.setStatus({text:"Aucun résultat trouvé"})}},closePopupIf:function(a){if(this.popup&&!a.within(this.popup)){this.popup.close()}},popupNavHandler:function(e,d){var a=this.popup.getLayout();var b=a.activeItem.id.split("popup-card-")[1];var c=parseInt(b)+e;a.setActiveItem(c);this.popupCounterTpl.overwrite(Ext.get(this.getId()+"_popup_counter"),{index:c+1,total:d});Ext.getCmp(this.getId()+"_popup_move_prev").setDisabled(c==0);Ext.getCmp(this.getId()+"_popup_move_next").setDisabled(c==d-1);this.popup.position()}});